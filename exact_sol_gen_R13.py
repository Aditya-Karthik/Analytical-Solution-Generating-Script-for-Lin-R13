# Analytical Solution Generator for the linearized R13 Equations over an annular domain
# =====================================================================================

from sympy import symbols,solve,besseli,besselk,ccode,expand
from scipy.special import iv
from scipy.special import kv
import math
import sympy
import yaml
import sys

x,y = symbols('x y')
sinphi,cosphi = symbols('sinphi cosphi')
# Integration Constants
c1,c2,c3,c4,c5,c6,c7,c8,c9,c10,c11,c12,C1I1,C1K1,C1I2,C1K2,C2I1,C2K1,C2I2,C2K2,C3I1,C3K1,C3I2,C3K2 = symbols('c1 c2 c3 c4 c5 c6 c7 c8 c9 c10 c11 c12 C1I1 C1K1 C1I2 C1K2 C2I1 C2K1 C2I2 C2K2 C3I1 C3K1 C3I2 C3K2')
coefs = [c1,c2,c3,c4,c5,c6,c7,c8,c9,c10,c11,c12,C1I1,C1K1,C1I2,C1K2,C2I1,C2K1,C2I2,C2K2,C3I1,C3K1,C3I2,C3K2]

def main():
    inputfile = sys.argv[1] if len(sys.argv) == 2 else "input.yml"
    read_yaml(inputfile)
    eqn = [None]*12                   # Boundary Equations
    coeffeqn = [None]*36              # Coefficient Equations
    eqn[0] = c12*cosphi*ep0 + (2*C3K2*cosphi*ep0)/5. + (c8*cosphi*ep0)/2. + c4*ev0 + C1K1*ev0*fac + C2K1*ev0*fac + C1K2*cosphi*ev0*fac + C2K2*cosphi*ev0*fac + (6*cosphi*ev0*F1*fac)/5. - cosphi*ev0*G11 - (ev0*fac*M0)/5. - (24*ev0*fac*M2)/25. - ev0*p0 - (2*ev0*fac*Q0)/15. - (16*ev0*fac*Q2)/25. + ep0*vn0 + (cosphi*ep0*F22*pow(R0,4))/(192.*pow(τ,4)) + (cosphi*ep0*G2*pow(R0,4))/(64.*pow(τ,4)) + (cosphi*ep0*F1*pow(R0,3))/(45.*pow(τ,3)) + (ev0*F2*pow(R0,3))/(3.*pow(τ,3)) + (3*cosphi*ev0*F22*pow(R0,3))/(8.*pow(τ,3)) - (cosphi*ev0*F22*fac*pow(R0,3))/(24.*pow(τ,3)) + (cosphi*ev0*G2*pow(R0,3))/(8.*pow(τ,3)) - (cosphi*ev0*fac*G2*pow(R0,3))/(8.*pow(τ,3)) + (ep0*M2*pow(R0,3))/(4.*pow(τ,3)) - (c9*cosphi*ep0*pow(R0,2))/(4.*pow(τ,2)) + (2*cosphi*ev0*F1*pow(R0,2))/(3.*pow(τ,2)) - (5*cosphi*ep0*F22*pow(R0,2))/(24.*pow(τ,2)) - (2*cosphi*ev0*F1*fac*pow(R0,2))/(15.*pow(τ,2)) - (5*cosphi*ep0*G2*pow(R0,2))/(8.*pow(τ,2)) + (7*cosphi*ep0*M1*pow(R0,2))/(20.*pow(τ,2)) + (4*ev0*M2*pow(R0,2))/(5.*pow(τ,2)) - (ev0*fac*M2*pow(R0,2))/(2.*pow(τ,2)) - (cosphi*ep0*Q1*pow(R0,2))/(60.*pow(τ,2)) + (8*ev0*Q2*pow(R0,2))/(15.*pow(τ,2)) - (ev0*fac*Q2*pow(R0,2))/(3.*pow(τ,2)) - (2*c9*cosphi*ev0*R0)/τ + (ev0*F0*R0)/τ - (52*cosphi*ep0*F1*R0)/(45.*τ) + (c9*cosphi*ev0*fac*R0)/τ + (ep0*M0*R0)/(2.*τ) + (3*cosphi*ev0*M1*R0)/(5.*τ) - (2*cosphi*ev0*fac*M1*R0)/(5.*τ) + (2*cosphi*ev0*Q1*R0)/(5.*τ) - (4*cosphi*ev0*fac*Q1*R0)/(15.*τ) + (c2*ep0*τ)/(2.*R0) - (2*c3*ep0*τ)/(5.*R0) + (c8*cosphi*ev0*τ)/R0 + (48*cosphi*ep0*F1*τ)/(25.*R0) + (c8*cosphi*ev0*fac*τ)/R0 - (3*c10*cosphi*ep0*pow(τ,2))/(2.*pow(R0,2)) + (c7*cosphi*ep0*pow(τ,2))/(4.*pow(R0,2)) + (5*c8*cosphi*ep0*pow(τ,2))/(3.*pow(R0,2)) + (c2*ev0*fac*pow(τ,2))/pow(R0,2) + (c7*cosphi*ev0*fac*pow(τ,3))/pow(R0,3) - (4*C1I1*ev0*BesselI(0,(math.sqrt(0.8333333333333334)*R0)/τ))/(3.*BesselI(0,(math.sqrt(0.8333333333333334)*R1)/τ)) + (C1I1*ev0*fac*BesselI(0,(math.sqrt(0.8333333333333334)*R0)/τ))/(3.*BesselI(0,(math.sqrt(0.8333333333333334)*R1)/τ)) - (C2I1*ev0*fac*BesselI(0,(math.sqrt(1.5)*R0)/τ))/BesselI(0,(math.sqrt(1.5)*R1)/τ) - (2*C3I2*cosphi*ep0*BesselI(0,(math.sqrt(5)*R0)/(3.*τ)))/(5.*BesselI(0,(math.sqrt(5)*R1)/(3.*τ))) - (8*C1I2*cosphi*ev0*BesselI(1,(math.sqrt(0.8333333333333334)*R0)/τ))/(3.*BesselI(1,(math.sqrt(0.8333333333333334)*R1)/τ)) + (5*C1I2*cosphi*ev0*fac*BesselI(1,(math.sqrt(0.8333333333333334)*R0)/τ))/(3.*BesselI(1,(math.sqrt(0.8333333333333334)*R1)/τ)) - (C2I2*cosphi*ev0*fac*BesselI(1,(math.sqrt(1.5)*R0)/τ))/BesselI(1,(math.sqrt(1.5)*R1)/τ) + (C1I1*ev0*fac*BesselI(2,(math.sqrt(0.8333333333333334)*R0)/τ))/BesselI(0,(math.sqrt(0.8333333333333334)*R1)/τ) + (C2I1*ev0*fac*BesselI(2,(math.sqrt(1.5)*R0)/τ))/BesselI(0,(math.sqrt(1.5)*R1)/τ) + (2*C3I2*cosphi*ep0*BesselI(2,(math.sqrt(5)*R0)/(3.*τ)))/(5.*BesselI(0,(math.sqrt(5)*R1)/(3.*τ))) + (C1I2*cosphi*ev0*fac*BesselI(3,(math.sqrt(0.8333333333333334)*R0)/τ))/BesselI(1,(math.sqrt(0.8333333333333334)*R1)/τ) + (C2I2*cosphi*ev0*fac*BesselI(3,(math.sqrt(1.5)*R0)/τ))/BesselI(1,(math.sqrt(1.5)*R1)/τ) - (4*C1K1*ev0*BesselK(0,(math.sqrt(0.8333333333333334)*R0)/τ))/(3.*BesselK(2,(math.sqrt(0.8333333333333334)*R0)/τ)) + (C1K1*ev0*fac*BesselK(0,(math.sqrt(0.8333333333333334)*R0)/τ))/(3.*BesselK(2,(math.sqrt(0.8333333333333334)*R0)/τ)) - (C2K1*ev0*fac*BesselK(0,(math.sqrt(1.5)*R0)/τ))/BesselK(2,(math.sqrt(1.5)*R0)/τ) - (2*C3K2*cosphi*ep0*BesselK(0,(math.sqrt(5)*R0)/(3.*τ)))/(5.*BesselK(2,(math.sqrt(5)*R0)/(3.*τ))) - (8*C1K2*cosphi*ev0*BesselK(1,(math.sqrt(0.8333333333333334)*R0)/τ))/(3.*BesselK(3,(math.sqrt(0.8333333333333334)*R0)/τ)) + (5*C1K2*cosphi*ev0*fac*BesselK(1,(math.sqrt(0.8333333333333334)*R0)/τ))/(3.*BesselK(3,(math.sqrt(0.8333333333333334)*R0)/τ)) - (C2K2*cosphi*ev0*fac*BesselK(1,(math.sqrt(1.5)*R0)/τ))/BesselK(3,(math.sqrt(1.5)*R0)/τ) - (c8*cosphi*ep0*math.log(R0/τ))/2.
    eqn[1] = -(C3K1*chi)/5. + (4*chi*G0)/3. + C1K2*sinphi + C2K2*sinphi + (3*c11*chi*sinphi)/4. - c12*chi*sinphi + (C3K2*chi*sinphi)/5. + (11*c9*chi*sinphi)/15. - (3*F1*sinphi)/5. - (27*chi*F22*sinphi)/50. - (81*chi*G2*sinphi)/50. + (119*chi*M1*sinphi)/150. - (286*chi*Q1*sinphi)/225. - chi*vt0 + (chi*G0*pow(R0,4))/(81.*pow(τ,4)) - (5*chi*F22*pow(R0,4)*sinphi)/(192.*pow(τ,4)) - (5*chi*G2*pow(R0,4)*sinphi)/(64.*pow(τ,4)) - (G0*pow(R0,3))/(27.*pow(τ,3)) - (chi*G1*pow(R0,3))/(8.*pow(τ,3)) - (4*chi*F1*pow(R0,3)*sinphi)/(45.*pow(τ,3)) + (F22*pow(R0,3)*sinphi)/(12.*pow(τ,3)) + (G2*pow(R0,3)*sinphi)/(4.*pow(τ,3)) - (29*chi*G0*pow(R0,2))/(54.*pow(τ,2)) + (G1*pow(R0,2))/(4.*pow(τ,2)) + (3*c9*chi*pow(R0,2)*sinphi)/(4.*pow(τ,2)) + (F1*pow(R0,2)*sinphi)/(5.*pow(τ,2)) + (29*chi*F22*pow(R0,2)*sinphi)/(80.*pow(τ,2)) + (87*chi*G2*pow(R0,2)*sinphi)/(80.*pow(τ,2)) - (chi*M1*pow(R0,2)*sinphi)/(40.*pow(τ,2)) + (chi*Q1*pow(R0,2)*sinphi)/(40.*pow(τ,2)) + (c6*chi*R0)/τ + (G0*R0)/(3.*τ) - (11*chi*G1*R0)/(30.*τ) - (c9*R0*sinphi)/τ + (29*chi*F1*R0*sinphi)/(15.*τ) + (M1*R0*sinphi)/(5.*τ) + (2*Q1*R0*sinphi)/(15.*τ) + (c1*chi*τ)/(2.*R0) + (14*C1K2*chi*sinphi*τ)/(5.*R0) + (14*C2K2*chi*sinphi*τ)/(5.*R0) + (c1*pow(τ,2))/pow(R0,2) - (3*c10*chi*sinphi*pow(τ,2))/(4.*pow(R0,2)) + (c7*chi*sinphi*pow(τ,2))/(4.*pow(R0,2)) + (23*c8*chi*sinphi*pow(τ,2))/(10.*pow(R0,2)) + (4*c1*chi*pow(τ,3))/pow(R0,3) + (c7*sinphi*pow(τ,3))/pow(R0,3) + (6*c7*chi*sinphi*pow(τ,4))/pow(R0,4) + (C3I2*chi*sinphi*BesselI(0,(math.sqrt(5)*R0)/(3.*τ)))/(5.*BesselI(0,(math.sqrt(5)*R1)/(3.*τ))) - (C1I2*sinphi*BesselI(1,(math.sqrt(0.8333333333333334)*R0)/τ))/BesselI(1,(math.sqrt(0.8333333333333334)*R1)/τ) - (2*C1I2*chi*sinphi*τ*BesselI(1,(math.sqrt(0.8333333333333334)*R0)/τ))/(3.*R0*BesselI(1,(math.sqrt(0.8333333333333334)*R1)/τ)) - (C2I2*sinphi*BesselI(1,(math.sqrt(1.5)*R0)/τ))/BesselI(1,(math.sqrt(1.5)*R1)/τ) - (26*C2I2*chi*sinphi*τ*BesselI(1,(math.sqrt(1.5)*R0)/τ))/(15.*R0*BesselI(1,(math.sqrt(1.5)*R1)/τ)) - (C3I1*chi*BesselI(1,(math.sqrt(5)*R0)/(3.*τ)))/(5.*BesselI(1,(math.sqrt(5)*R1)/(3.*τ))) + (4*math.sqrt(0.13333333333333333)*C1I2*chi*sinphi*(BesselI(0,(math.sqrt(0.8333333333333334)*R0)/τ) + BesselI(2,(math.sqrt(0.8333333333333334)*R0)/τ)))/(3.*BesselI(1,(math.sqrt(0.8333333333333334)*R1)/τ)) + (4*math.sqrt(0.6666666666666666)*C2I2*chi*sinphi*(BesselI(0,(math.sqrt(1.5)*R0)/τ) + BesselI(2,(math.sqrt(1.5)*R0)/τ)))/(5.*BesselI(1,(math.sqrt(1.5)*R1)/τ)) + (C3I2*chi*sinphi*BesselI(2,(math.sqrt(5)*R0)/(3.*τ)))/(5.*BesselI(0,(math.sqrt(5)*R1)/(3.*τ))) + (C1I2*sinphi*BesselI(3,(math.sqrt(0.8333333333333334)*R0)/τ))/BesselI(1,(math.sqrt(0.8333333333333334)*R1)/τ) + (14*C1I2*chi*sinphi*τ*BesselI(3,(math.sqrt(0.8333333333333334)*R0)/τ))/(5.*R0*BesselI(1,(math.sqrt(0.8333333333333334)*R1)/τ)) + (C2I2*sinphi*BesselI(3,(math.sqrt(1.5)*R0)/τ))/BesselI(1,(math.sqrt(1.5)*R1)/τ) + (14*C2I2*chi*sinphi*τ*BesselI(3,(math.sqrt(1.5)*R0)/τ))/(5.*R0*BesselI(1,(math.sqrt(1.5)*R1)/τ)) - (4*math.sqrt(0.13333333333333333)*C1I2*chi*sinphi*(BesselI(2,(math.sqrt(0.8333333333333334)*R0)/τ) + BesselI(4,(math.sqrt(0.8333333333333334)*R0)/τ)))/(3.*BesselI(1,(math.sqrt(0.8333333333333334)*R1)/τ)) - (4*math.sqrt(0.6666666666666666)*C2I2*chi*sinphi*(BesselI(2,(math.sqrt(1.5)*R0)/τ) + BesselI(4,(math.sqrt(1.5)*R0)/τ)))/(5.*BesselI(1,(math.sqrt(1.5)*R1)/τ)) + (C3K2*chi*sinphi*BesselK(0,(math.sqrt(5)*R0)/(3.*τ)))/(5.*BesselK(2,(math.sqrt(5)*R0)/(3.*τ))) - (C1K2*sinphi*BesselK(1,(math.sqrt(0.8333333333333334)*R0)/τ))/BesselK(3,(math.sqrt(0.8333333333333334)*R0)/τ) - (2*C1K2*chi*sinphi*τ*BesselK(1,(math.sqrt(0.8333333333333334)*R0)/τ))/(3.*R0*BesselK(3,(math.sqrt(0.8333333333333334)*R0)/τ)) + (4*math.sqrt(0.13333333333333333)*C1K2*chi*sinphi*(-BesselK(0,(math.sqrt(0.8333333333333334)*R0)/τ) - BesselK(2,(math.sqrt(0.8333333333333334)*R0)/τ)))/(3.*BesselK(3,(math.sqrt(0.8333333333333334)*R0)/τ)) - (C2K2*sinphi*BesselK(1,(math.sqrt(1.5)*R0)/τ))/BesselK(3,(math.sqrt(1.5)*R0)/τ) - (26*C2K2*chi*sinphi*τ*BesselK(1,(math.sqrt(1.5)*R0)/τ))/(15.*R0*BesselK(3,(math.sqrt(1.5)*R0)/τ)) + (4*math.sqrt(0.6666666666666666)*C2K2*chi*sinphi*(-BesselK(0,(math.sqrt(1.5)*R0)/τ) - BesselK(2,(math.sqrt(1.5)*R0)/τ)))/(5.*BesselK(3,(math.sqrt(1.5)*R0)/τ)) - (4*math.sqrt(0.13333333333333333)*C1K2*chi*sinphi*(-BesselK(2,(math.sqrt(0.8333333333333334)*R0)/τ) - BesselK(4,(math.sqrt(0.8333333333333334)*R0)/τ)))/(3.*BesselK(3,(math.sqrt(0.8333333333333334)*R0)/τ)) - (4*math.sqrt(0.6666666666666666)*C2K2*chi*sinphi*(-BesselK(2,(math.sqrt(1.5)*R0)/τ) - BesselK(4,(math.sqrt(1.5)*R0)/τ)))/(5.*BesselK(3,(math.sqrt(1.5)*R0)/τ)) + (c8*chi*sinphi*math.log(R0/τ))/2.
    eqn[2] = (C1K1*chi)/2. + (C2K1*chi)/2. + 2*c5*chi - (15*c11*cosphi)/4. - C3K2*cosphi - 3*c9*cosphi + (C1K2*chi*cosphi)/2. + (C2K2*chi*cosphi)/2. - (9*chi*cosphi*F1)/25. + (27*cosphi*F22)/10. + (81*cosphi*G2)/10. + (91*chi*M0)/50. - (9*cosphi*M1)/2. - (12*chi*M2)/25. - (149*chi*Q0)/75. + 6*cosphi*Q1 - (8*chi*Q2)/25. - 2*chi*θ0 + (chi*M2*pow(R0,4))/(30.*pow(τ,4)) - (chi*Q2*pow(R0,4))/(30.*pow(τ,4)) - (chi*cosphi*F22*pow(R0,3))/(48.*pow(τ,3)) - (chi*cosphi*G2*pow(R0,3))/(16.*pow(τ,3)) + (chi*cosphi*M1*pow(R0,3))/(15.*pow(τ,3)) - (M2*pow(R0,3))/(4.*pow(τ,3)) - (chi*cosphi*Q1*pow(R0,3))/(15.*pow(τ,3)) + (Q2*pow(R0,3))/(4.*pow(τ,3)) - (chi*cosphi*F1*pow(R0,2))/(15.*pow(τ,2)) + (3*cosphi*F22*pow(R0,2))/(16.*pow(τ,2)) + (9*cosphi*G2*pow(R0,2))/(16.*pow(τ,2)) + (2*chi*M0*pow(R0,2))/(15.*pow(τ,2)) - (3*cosphi*M1*pow(R0,2))/(8.*pow(τ,2)) - (9*chi*M2*pow(R0,2))/(100.*pow(τ,2)) - (2*chi*Q0*pow(R0,2))/(15.*pow(τ,2)) + (3*cosphi*Q1*pow(R0,2))/(8.*pow(τ,2)) + (37*chi*Q2*pow(R0,2))/(50.*pow(τ,2)) + (2*c11*chi*cosphi*R0)/τ + (c9*chi*cosphi*R0)/(2.*τ) + (cosphi*F1*R0)/(2.*τ) - (18*chi*cosphi*F22*R0)/(25.*τ) - (54*chi*cosphi*G2*R0)/(25.*τ) - (M0*R0)/(2.*τ) + (11*chi*cosphi*M1*R0)/(5.*τ) + (Q0*R0)/(2.*τ) - (38*chi*cosphi*Q1*R0)/(15.*τ) + (c3*τ)/R0 + (2*c10*chi*cosphi*τ)/R0 + (48*C3K2*chi*cosphi*τ)/(25.*R0) + (c8*chi*cosphi*τ)/(2.*R0) + (c2*chi*pow(τ,2))/(2.*pow(R0,2)) + (48*c3*chi*pow(τ,2))/(25.*pow(R0,2)) + (15*c10*cosphi*pow(τ,2))/(4.*pow(R0,2)) - (3*c8*cosphi*pow(τ,2))/(2.*pow(R0,2)) + (72*c10*chi*cosphi*pow(τ,3))/(5.*pow(R0,3)) + (c7*chi*cosphi*pow(τ,3))/(2.*pow(R0,3)) - (144*c8*chi*cosphi*pow(τ,3))/(25.*pow(R0,3)) - (9*C1I1*chi*BesselI(0,(math.sqrt(0.8333333333333334)*R0)/τ))/(10.*BesselI(0,(math.sqrt(0.8333333333333334)*R1)/τ)) - (C2I1*chi*BesselI(0,(math.sqrt(1.5)*R0)/τ))/(2.*BesselI(0,(math.sqrt(1.5)*R1)/τ)) + (C3I2*cosphi*BesselI(0,(math.sqrt(5)*R0)/(3.*τ)))/BesselI(0,(math.sqrt(5)*R1)/(3.*τ)) - (24*C3I2*chi*cosphi*BesselI(1,(math.sqrt(5)*R0)/(3.*τ)))/(5.*math.sqrt(5)*BesselI(0,(math.sqrt(5)*R1)/(3.*τ))) - (13*C1I2*chi*cosphi*BesselI(1,(math.sqrt(0.8333333333333334)*R0)/τ))/(10.*BesselI(1,(math.sqrt(0.8333333333333334)*R1)/τ)) - (C2I2*chi*cosphi*BesselI(1,(math.sqrt(1.5)*R0)/τ))/(2.*BesselI(1,(math.sqrt(1.5)*R1)/τ)) + (C1I1*chi*BesselI(2,(math.sqrt(0.8333333333333334)*R0)/τ))/(2.*BesselI(0,(math.sqrt(0.8333333333333334)*R1)/τ)) + (C2I1*chi*BesselI(2,(math.sqrt(1.5)*R0)/τ))/(2.*BesselI(0,(math.sqrt(1.5)*R1)/τ)) - (C3I2*cosphi*BesselI(2,(math.sqrt(5)*R0)/(3.*τ)))/BesselI(0,(math.sqrt(5)*R1)/(3.*τ)) + (48*C3I2*chi*cosphi*τ*BesselI(2,(math.sqrt(5)*R0)/(3.*τ)))/(25.*R0*BesselI(0,(math.sqrt(5)*R1)/(3.*τ))) + (C1I2*chi*cosphi*BesselI(3,(math.sqrt(0.8333333333333334)*R0)/τ))/(2.*BesselI(1,(math.sqrt(0.8333333333333334)*R1)/τ)) + (C2I2*chi*cosphi*BesselI(3,(math.sqrt(1.5)*R0)/τ))/(2.*BesselI(1,(math.sqrt(1.5)*R1)/τ)) + (12*C3I2*chi*cosphi*(BesselI(1,(math.sqrt(5)*R0)/(3.*τ)) + BesselI(3,(math.sqrt(5)*R0)/(3.*τ))))/(5.*math.sqrt(5)*BesselI(0,(math.sqrt(5)*R1)/(3.*τ))) - (9*C1K1*chi*BesselK(0,(math.sqrt(0.8333333333333334)*R0)/τ))/(10.*BesselK(2,(math.sqrt(0.8333333333333334)*R0)/τ)) - (C2K1*chi*BesselK(0,(math.sqrt(1.5)*R0)/τ))/(2.*BesselK(2,(math.sqrt(1.5)*R0)/τ)) + (C3K2*cosphi*BesselK(0,(math.sqrt(5)*R0)/(3.*τ)))/BesselK(2,(math.sqrt(5)*R0)/(3.*τ)) + (24*C3K2*chi*cosphi*BesselK(1,(math.sqrt(5)*R0)/(3.*τ)))/(5.*math.sqrt(5)*BesselK(2,(math.sqrt(5)*R0)/(3.*τ))) - (13*C1K2*chi*cosphi*BesselK(1,(math.sqrt(0.8333333333333334)*R0)/τ))/(10.*BesselK(3,(math.sqrt(0.8333333333333334)*R0)/τ)) - (C2K2*chi*cosphi*BesselK(1,(math.sqrt(1.5)*R0)/τ))/(2.*BesselK(3,(math.sqrt(1.5)*R0)/τ)) + (12*C3K2*chi*cosphi*(-BesselK(1,(math.sqrt(5)*R0)/(3.*τ)) - BesselK(3,(math.sqrt(5)*R0)/(3.*τ))))/(5.*math.sqrt(5)*BesselK(2,(math.sqrt(5)*R0)/(3.*τ))) - (8*c3*chi*math.log(R0/τ))/15.
    eqn[3] = (7*C1K1*chi)/5. + (7*C2K1*chi)/5. - (2*c5*chi)/5. - (2*c9*cosphi)/5. + (7*C1K2*chi*cosphi)/5. + (7*C2K2*chi*cosphi)/5. + (234*chi*cosphi*F1)/125. - (83*chi*M0)/125. + (8*cosphi*M1)/25. - (168*chi*M2)/125. + (74*chi*Q0)/375. + (16*cosphi*Q1)/75. - (112*chi*Q2)/125. + (2*chi*θ0)/5. - (chi*M2*pow(R0,4))/(150.*pow(τ,4)) + (chi*Q2*pow(R0,4))/(150.*pow(τ,4)) - (7*chi*cosphi*F22*pow(R0,3))/(120.*pow(τ,3)) - (7*chi*cosphi*G2*pow(R0,3))/(40.*pow(τ,3)) - (chi*cosphi*M1*pow(R0,3))/(75.*pow(τ,3)) + (chi*cosphi*Q1*pow(R0,3))/(75.*pow(τ,3)) - (14*chi*cosphi*F1*pow(R0,2))/(75.*pow(τ,2)) + (3*cosphi*F22*pow(R0,2))/(20.*pow(τ,2)) + (9*cosphi*G2*pow(R0,2))/(20.*pow(τ,2)) - (2*chi*M0*pow(R0,2))/(75.*pow(τ,2)) - (183*chi*M2*pow(R0,2))/(250.*pow(τ,2)) + (2*chi*Q0*pow(R0,2))/(75.*pow(τ,2)) - (81*chi*Q2*pow(R0,2))/(125.*pow(τ,2)) - (2*c11*chi*cosphi*R0)/(5.*τ) + (7*c9*chi*cosphi*R0)/(5.*τ) + (4*cosphi*F1*R0)/(15.*τ) + (18*chi*cosphi*F22*R0)/(125.*τ) + (54*chi*cosphi*G2*R0)/(125.*τ) - (26*chi*cosphi*M1*R0)/(25.*τ) + (18*M2*R0)/(25.*τ) + (8*chi*cosphi*Q1*R0)/(75.*τ) + (12*Q2*R0)/(25.*τ) + (8*C1K1*τ)/(5.*R0) + (8*C2K1*τ)/(5.*R0) + (12*C1K2*cosphi*τ)/(5.*R0) + (12*C2K2*cosphi*τ)/(5.*R0) - (2*c10*chi*cosphi*τ)/(5.*R0) - (48*C3K2*chi*cosphi*τ)/(125.*R0) + (7*c8*chi*cosphi*τ)/(5.*R0) + (36*cosphi*F1*τ)/(25.*R0) + (7*c2*chi*pow(τ,2))/(5.*pow(R0,2)) - (48*c3*chi*pow(τ,2))/(125.*pow(R0,2)) + (14*c8*cosphi*pow(τ,2))/(5.*pow(R0,2)) + (4*c2*pow(τ,3))/pow(R0,3) - (72*c10*chi*cosphi*pow(τ,3))/(25.*pow(R0,3)) + (7*c7*chi*cosphi*pow(τ,3))/(5.*pow(R0,3)) + (144*c8*chi*cosphi*pow(τ,3))/(125.*pow(R0,3)) + (6*c7*cosphi*pow(τ,4))/pow(R0,4) + (17*C1I1*chi*BesselI(0,(math.sqrt(0.8333333333333334)*R0)/τ))/(25.*BesselI(0,(math.sqrt(0.8333333333333334)*R1)/τ)) - (7*C2I1*chi*BesselI(0,(math.sqrt(1.5)*R0)/τ))/(5.*BesselI(0,(math.sqrt(1.5)*R1)/τ)) - (math.sqrt(0.13333333333333333)*C1I1*BesselI(1,(math.sqrt(0.8333333333333334)*R0)/τ))/BesselI(0,(math.sqrt(0.8333333333333334)*R1)/τ) + (3*math.sqrt(6)*C2I1*BesselI(1,(math.sqrt(1.5)*R0)/τ))/(5.*BesselI(0,(math.sqrt(1.5)*R1)/τ)) + (24*C3I2*chi*cosphi*BesselI(1,(math.sqrt(5)*R0)/(3.*τ)))/(25.*math.sqrt(5)*BesselI(0,(math.sqrt(5)*R1)/(3.*τ))) + (69*C1I2*chi*cosphi*BesselI(1,(math.sqrt(0.8333333333333334)*R0)/τ))/(25.*BesselI(1,(math.sqrt(0.8333333333333334)*R1)/τ)) + (4*C1I2*cosphi*τ*BesselI(1,(math.sqrt(0.8333333333333334)*R0)/τ))/(5.*R0*BesselI(1,(math.sqrt(0.8333333333333334)*R1)/τ)) - (7*C2I2*chi*cosphi*BesselI(1,(math.sqrt(1.5)*R0)/τ))/(5.*BesselI(1,(math.sqrt(1.5)*R1)/τ)) + (4*C2I2*cosphi*τ*BesselI(1,(math.sqrt(1.5)*R0)/τ))/(5.*R0*BesselI(1,(math.sqrt(1.5)*R1)/τ)) + (7*C1I1*chi*BesselI(2,(math.sqrt(0.8333333333333334)*R0)/τ))/(5.*BesselI(0,(math.sqrt(0.8333333333333334)*R1)/τ)) + (8*C1I1*τ*BesselI(2,(math.sqrt(0.8333333333333334)*R0)/τ))/(5.*R0*BesselI(0,(math.sqrt(0.8333333333333334)*R1)/τ)) - (math.sqrt(0.8333333333333334)*C1I2*cosphi*(BesselI(0,(math.sqrt(0.8333333333333334)*R0)/τ) + BesselI(2,(math.sqrt(0.8333333333333334)*R0)/τ)))/BesselI(1,(math.sqrt(0.8333333333333334)*R1)/τ) + (7*C2I1*chi*BesselI(2,(math.sqrt(1.5)*R0)/τ))/(5.*BesselI(0,(math.sqrt(1.5)*R1)/τ)) + (8*C2I1*τ*BesselI(2,(math.sqrt(1.5)*R0)/τ))/(5.*R0*BesselI(0,(math.sqrt(1.5)*R1)/τ)) + (3*math.sqrt(1.5)*C2I2*cosphi*(BesselI(0,(math.sqrt(1.5)*R0)/τ) + BesselI(2,(math.sqrt(1.5)*R0)/τ)))/(5.*BesselI(1,(math.sqrt(1.5)*R1)/τ)) - (48*C3I2*chi*cosphi*τ*BesselI(2,(math.sqrt(5)*R0)/(3.*τ)))/(125.*R0*BesselI(0,(math.sqrt(5)*R1)/(3.*τ))) + (7*C1I2*chi*cosphi*BesselI(3,(math.sqrt(0.8333333333333334)*R0)/τ))/(5.*BesselI(1,(math.sqrt(0.8333333333333334)*R1)/τ)) + (12*C1I2*cosphi*τ*BesselI(3,(math.sqrt(0.8333333333333334)*R0)/τ))/(5.*R0*BesselI(1,(math.sqrt(0.8333333333333334)*R1)/τ)) - (math.sqrt(0.3)*C1I1*(BesselI(1,(math.sqrt(0.8333333333333334)*R0)/τ) + BesselI(3,(math.sqrt(0.8333333333333334)*R0)/τ)))/BesselI(0,(math.sqrt(0.8333333333333334)*R1)/τ) + (7*C2I2*chi*cosphi*BesselI(3,(math.sqrt(1.5)*R0)/τ))/(5.*BesselI(1,(math.sqrt(1.5)*R1)/τ)) + (12*C2I2*cosphi*τ*BesselI(3,(math.sqrt(1.5)*R0)/τ))/(5.*R0*BesselI(1,(math.sqrt(1.5)*R1)/τ)) - (3*math.sqrt(1.5)*C2I1*(BesselI(1,(math.sqrt(1.5)*R0)/τ) + BesselI(3,(math.sqrt(1.5)*R0)/τ)))/(5.*BesselI(0,(math.sqrt(1.5)*R1)/τ)) - (12*C3I2*chi*cosphi*(BesselI(1,(math.sqrt(5)*R0)/(3.*τ)) + BesselI(3,(math.sqrt(5)*R0)/(3.*τ))))/(25.*math.sqrt(5)*BesselI(0,(math.sqrt(5)*R1)/(3.*τ))) - (math.sqrt(0.3)*C1I2*cosphi*(BesselI(2,(math.sqrt(0.8333333333333334)*R0)/τ) + BesselI(4,(math.sqrt(0.8333333333333334)*R0)/τ)))/BesselI(1,(math.sqrt(0.8333333333333334)*R1)/τ) - (3*math.sqrt(1.5)*C2I2*cosphi*(BesselI(2,(math.sqrt(1.5)*R0)/τ) + BesselI(4,(math.sqrt(1.5)*R0)/τ)))/(5.*BesselI(1,(math.sqrt(1.5)*R1)/τ)) + (17*C1K1*chi*BesselK(0,(math.sqrt(0.8333333333333334)*R0)/τ))/(25.*BesselK(2,(math.sqrt(0.8333333333333334)*R0)/τ)) + (math.sqrt(0.13333333333333333)*C1K1*BesselK(1,(math.sqrt(0.8333333333333334)*R0)/τ))/BesselK(2,(math.sqrt(0.8333333333333334)*R0)/τ) - (7*C2K1*chi*BesselK(0,(math.sqrt(1.5)*R0)/τ))/(5.*BesselK(2,(math.sqrt(1.5)*R0)/τ)) - (3*math.sqrt(6)*C2K1*BesselK(1,(math.sqrt(1.5)*R0)/τ))/(5.*BesselK(2,(math.sqrt(1.5)*R0)/τ)) - (24*C3K2*chi*cosphi*BesselK(1,(math.sqrt(5)*R0)/(3.*τ)))/(25.*math.sqrt(5)*BesselK(2,(math.sqrt(5)*R0)/(3.*τ))) - (math.sqrt(0.3)*C1K1*(-BesselK(1,(math.sqrt(0.8333333333333334)*R0)/τ) - BesselK(3,(math.sqrt(0.8333333333333334)*R0)/τ)))/BesselK(2,(math.sqrt(0.8333333333333334)*R0)/τ) + (69*C1K2*chi*cosphi*BesselK(1,(math.sqrt(0.8333333333333334)*R0)/τ))/(25.*BesselK(3,(math.sqrt(0.8333333333333334)*R0)/τ)) + (4*C1K2*cosphi*τ*BesselK(1,(math.sqrt(0.8333333333333334)*R0)/τ))/(5.*R0*BesselK(3,(math.sqrt(0.8333333333333334)*R0)/τ)) - (math.sqrt(0.8333333333333334)*C1K2*cosphi*(-BesselK(0,(math.sqrt(0.8333333333333334)*R0)/τ) - BesselK(2,(math.sqrt(0.8333333333333334)*R0)/τ)))/BesselK(3,(math.sqrt(0.8333333333333334)*R0)/τ) - (3*math.sqrt(1.5)*C2K1*(-BesselK(1,(math.sqrt(1.5)*R0)/τ) - BesselK(3,(math.sqrt(1.5)*R0)/τ)))/(5.*BesselK(2,(math.sqrt(1.5)*R0)/τ)) - (7*C2K2*chi*cosphi*BesselK(1,(math.sqrt(1.5)*R0)/τ))/(5.*BesselK(3,(math.sqrt(1.5)*R0)/τ)) + (4*C2K2*cosphi*τ*BesselK(1,(math.sqrt(1.5)*R0)/τ))/(5.*R0*BesselK(3,(math.sqrt(1.5)*R0)/τ)) + (3*math.sqrt(1.5)*C2K2*cosphi*(-BesselK(0,(math.sqrt(1.5)*R0)/τ) - BesselK(2,(math.sqrt(1.5)*R0)/τ)))/(5.*BesselK(3,(math.sqrt(1.5)*R0)/τ)) - (12*C3K2*chi*cosphi*(-BesselK(1,(math.sqrt(5)*R0)/(3.*τ)) - BesselK(3,(math.sqrt(5)*R0)/(3.*τ))))/(25.*math.sqrt(5)*BesselK(2,(math.sqrt(5)*R0)/(3.*τ))) - (math.sqrt(0.3)*C1K2*cosphi*(-BesselK(2,(math.sqrt(0.8333333333333334)*R0)/τ) - BesselK(4,(math.sqrt(0.8333333333333334)*R0)/τ)))/BesselK(3,(math.sqrt(0.8333333333333334)*R0)/τ) - (3*math.sqrt(1.5)*C2K2*cosphi*(-BesselK(2,(math.sqrt(1.5)*R0)/τ) - BesselK(4,(math.sqrt(1.5)*R0)/τ)))/(5.*BesselK(3,(math.sqrt(1.5)*R0)/τ)) + (8*c3*chi*math.log(R0/τ))/75.
    eqn[4] = (-6*C1K1*chi)/5. - (6*C2K1*chi)/5. + (c5*chi)/5. - (2*c9*cosphi)/15. - (6*C1K2*chi*cosphi)/5. - (6*C2K2*chi*cosphi)/5. - (192*chi*cosphi*F1)/125. + (4*chi*M0)/125. + (8*cosphi*M1)/75. - (96*chi*M2)/125. - (112*chi*Q0)/375. + (16*cosphi*Q1)/225. - (64*chi*Q2)/125. - (chi*θ0)/5. + (chi*M2*pow(R0,4))/(300.*pow(τ,4)) - (chi*Q2*pow(R0,4))/(300.*pow(τ,4)) + (chi*cosphi*F22*pow(R0,3))/(20.*pow(τ,3)) + (3*chi*cosphi*G2*pow(R0,3))/(20.*pow(τ,3)) + (chi*cosphi*M1*pow(R0,3))/(150.*pow(τ,3)) - (chi*cosphi*Q1*pow(R0,3))/(150.*pow(τ,3)) + (4*chi*cosphi*F1*pow(R0,2))/(25.*pow(τ,2)) - (7*cosphi*F22*pow(R0,2))/(60.*pow(τ,2)) - (7*cosphi*G2*pow(R0,2))/(20.*pow(τ,2)) + (chi*M0*pow(R0,2))/(75.*pow(τ,2)) + (27*chi*M2*pow(R0,2))/(125.*pow(τ,2)) - (chi*Q0*pow(R0,2))/(75.*pow(τ,2)) + (28*chi*Q2*pow(R0,2))/(125.*pow(τ,2)) + (c11*chi*cosphi*R0)/(5.*τ) - (6*c9*chi*cosphi*R0)/(5.*τ) - (8*cosphi*F1*R0)/(45.*τ) - (9*chi*cosphi*F22*R0)/(125.*τ) - (27*chi*cosphi*G2*R0)/(125.*τ) + (8*chi*cosphi*M1*R0)/(25.*τ) + (6*M2*R0)/(25.*τ) - (14*chi*cosphi*Q1*R0)/(75.*τ) + (4*Q2*R0)/(25.*τ) - (32*C1K1*τ)/(15.*R0) - (32*C2K1*τ)/(15.*R0) - (16*C1K2*cosphi*τ)/(5.*R0) - (16*C2K2*cosphi*τ)/(5.*R0) + (c10*chi*cosphi*τ)/(5.*R0) + (24*C3K2*chi*cosphi*τ)/(125.*R0) - (6*c8*chi*cosphi*τ)/(5.*R0) - (48*cosphi*F1*τ)/(25.*R0) - (6*c2*chi*pow(τ,2))/(5.*pow(R0,2)) + (24*c3*chi*pow(τ,2))/(125.*pow(R0,2)) - (46*c8*cosphi*pow(τ,2))/(15.*pow(R0,2)) - (4*c2*pow(τ,3))/pow(R0,3) + (36*c10*chi*cosphi*pow(τ,3))/(25.*pow(R0,3)) - (6*c7*chi*cosphi*pow(τ,3))/(5.*pow(R0,3)) - (72*c8*chi*cosphi*pow(τ,3))/(125.*pow(R0,3)) - (6*c7*cosphi*pow(τ,4))/pow(R0,4) + (4*C1I1*chi*BesselI(0,(math.sqrt(0.8333333333333334)*R0)/τ))/(25.*BesselI(0,(math.sqrt(0.8333333333333334)*R1)/τ)) - (4*C2I1*chi*BesselI(0,(math.sqrt(1.5)*R0)/τ))/(5.*BesselI(0,(math.sqrt(1.5)*R1)/τ)) - (math.sqrt(0.13333333333333333)*C1I1*BesselI(1,(math.sqrt(0.8333333333333334)*R0)/τ))/(3.*BesselI(0,(math.sqrt(0.8333333333333334)*R1)/τ)) + (math.sqrt(6)*C2I1*BesselI(1,(math.sqrt(1.5)*R0)/τ))/(5.*BesselI(0,(math.sqrt(1.5)*R1)/τ)) - (12*C3I2*chi*cosphi*BesselI(1,(math.sqrt(5)*R0)/(3.*τ)))/(25.*math.sqrt(5)*BesselI(0,(math.sqrt(5)*R1)/(3.*τ))) - (22*C1I2*chi*cosphi*BesselI(1,(math.sqrt(0.8333333333333334)*R0)/τ))/(25.*BesselI(1,(math.sqrt(0.8333333333333334)*R1)/τ)) - (16*C1I2*cosphi*τ*BesselI(1,(math.sqrt(0.8333333333333334)*R0)/τ))/(15.*R0*BesselI(1,(math.sqrt(0.8333333333333334)*R1)/τ)) - (14*C2I2*chi*cosphi*BesselI(1,(math.sqrt(1.5)*R0)/τ))/(5.*BesselI(1,(math.sqrt(1.5)*R1)/τ)) - (16*C2I2*cosphi*τ*BesselI(1,(math.sqrt(1.5)*R0)/τ))/(15.*R0*BesselI(1,(math.sqrt(1.5)*R1)/τ)) - (6*C1I1*chi*BesselI(2,(math.sqrt(0.8333333333333334)*R0)/τ))/(5.*BesselI(0,(math.sqrt(0.8333333333333334)*R1)/τ)) - (32*C1I1*τ*BesselI(2,(math.sqrt(0.8333333333333334)*R0)/τ))/(15.*R0*BesselI(0,(math.sqrt(0.8333333333333334)*R1)/τ)) + (math.sqrt(0.8333333333333334)*C1I2*cosphi*(BesselI(0,(math.sqrt(0.8333333333333334)*R0)/τ) + BesselI(2,(math.sqrt(0.8333333333333334)*R0)/τ)))/(3.*BesselI(1,(math.sqrt(0.8333333333333334)*R1)/τ)) - (6*C2I1*chi*BesselI(2,(math.sqrt(1.5)*R0)/τ))/(5.*BesselI(0,(math.sqrt(1.5)*R1)/τ)) - (32*C2I1*τ*BesselI(2,(math.sqrt(1.5)*R0)/τ))/(15.*R0*BesselI(0,(math.sqrt(1.5)*R1)/τ)) + (13*C2I2*cosphi*(BesselI(0,(math.sqrt(1.5)*R0)/τ) + BesselI(2,(math.sqrt(1.5)*R0)/τ)))/(5.*math.sqrt(6)*BesselI(1,(math.sqrt(1.5)*R1)/τ)) + (24*C3I2*chi*cosphi*τ*BesselI(2,(math.sqrt(5)*R0)/(3.*τ)))/(125.*R0*BesselI(0,(math.sqrt(5)*R1)/(3.*τ))) - (6*C1I2*chi*cosphi*BesselI(3,(math.sqrt(0.8333333333333334)*R0)/τ))/(5.*BesselI(1,(math.sqrt(0.8333333333333334)*R1)/τ)) - (16*C1I2*cosphi*τ*BesselI(3,(math.sqrt(0.8333333333333334)*R0)/τ))/(5.*R0*BesselI(1,(math.sqrt(0.8333333333333334)*R1)/τ)) + (7*C1I1*(BesselI(1,(math.sqrt(0.8333333333333334)*R0)/τ) + BesselI(3,(math.sqrt(0.8333333333333334)*R0)/τ)))/(3.*math.sqrt(30)*BesselI(0,(math.sqrt(0.8333333333333334)*R1)/τ)) - (6*C2I2*chi*cosphi*BesselI(3,(math.sqrt(1.5)*R0)/τ))/(5.*BesselI(1,(math.sqrt(1.5)*R1)/τ)) - (16*C2I2*cosphi*τ*BesselI(3,(math.sqrt(1.5)*R0)/τ))/(5.*R0*BesselI(1,(math.sqrt(1.5)*R1)/τ)) + (7*C2I1*(BesselI(1,(math.sqrt(1.5)*R0)/τ) + BesselI(3,(math.sqrt(1.5)*R0)/τ)))/(5.*math.sqrt(6)*BesselI(0,(math.sqrt(1.5)*R1)/τ)) + (6*C3I2*chi*cosphi*(BesselI(1,(math.sqrt(5)*R0)/(3.*τ)) + BesselI(3,(math.sqrt(5)*R0)/(3.*τ))))/(25.*math.sqrt(5)*BesselI(0,(math.sqrt(5)*R1)/(3.*τ))) + (7*C1I2*cosphi*(BesselI(2,(math.sqrt(0.8333333333333334)*R0)/τ) + BesselI(4,(math.sqrt(0.8333333333333334)*R0)/τ)))/(3.*math.sqrt(30)*BesselI(1,(math.sqrt(0.8333333333333334)*R1)/τ)) + (7*C2I2*cosphi*(BesselI(2,(math.sqrt(1.5)*R0)/τ) + BesselI(4,(math.sqrt(1.5)*R0)/τ)))/(5.*math.sqrt(6)*BesselI(1,(math.sqrt(1.5)*R1)/τ)) + (4*C1K1*chi*BesselK(0,(math.sqrt(0.8333333333333334)*R0)/τ))/(25.*BesselK(2,(math.sqrt(0.8333333333333334)*R0)/τ)) + (math.sqrt(0.13333333333333333)*C1K1*BesselK(1,(math.sqrt(0.8333333333333334)*R0)/τ))/(3.*BesselK(2,(math.sqrt(0.8333333333333334)*R0)/τ)) - (4*C2K1*chi*BesselK(0,(math.sqrt(1.5)*R0)/τ))/(5.*BesselK(2,(math.sqrt(1.5)*R0)/τ)) - (math.sqrt(6)*C2K1*BesselK(1,(math.sqrt(1.5)*R0)/τ))/(5.*BesselK(2,(math.sqrt(1.5)*R0)/τ)) + (12*C3K2*chi*cosphi*BesselK(1,(math.sqrt(5)*R0)/(3.*τ)))/(25.*math.sqrt(5)*BesselK(2,(math.sqrt(5)*R0)/(3.*τ))) + (7*C1K1*(-BesselK(1,(math.sqrt(0.8333333333333334)*R0)/τ) - BesselK(3,(math.sqrt(0.8333333333333334)*R0)/τ)))/(3.*math.sqrt(30)*BesselK(2,(math.sqrt(0.8333333333333334)*R0)/τ)) - (22*C1K2*chi*cosphi*BesselK(1,(math.sqrt(0.8333333333333334)*R0)/τ))/(25.*BesselK(3,(math.sqrt(0.8333333333333334)*R0)/τ)) - (16*C1K2*cosphi*τ*BesselK(1,(math.sqrt(0.8333333333333334)*R0)/τ))/(15.*R0*BesselK(3,(math.sqrt(0.8333333333333334)*R0)/τ)) + (math.sqrt(0.8333333333333334)*C1K2*cosphi*(-BesselK(0,(math.sqrt(0.8333333333333334)*R0)/τ) - BesselK(2,(math.sqrt(0.8333333333333334)*R0)/τ)))/(3.*BesselK(3,(math.sqrt(0.8333333333333334)*R0)/τ)) + (7*C2K1*(-BesselK(1,(math.sqrt(1.5)*R0)/τ) - BesselK(3,(math.sqrt(1.5)*R0)/τ)))/(5.*math.sqrt(6)*BesselK(2,(math.sqrt(1.5)*R0)/τ)) - (14*C2K2*chi*cosphi*BesselK(1,(math.sqrt(1.5)*R0)/τ))/(5.*BesselK(3,(math.sqrt(1.5)*R0)/τ)) - (16*C2K2*cosphi*τ*BesselK(1,(math.sqrt(1.5)*R0)/τ))/(15.*R0*BesselK(3,(math.sqrt(1.5)*R0)/τ)) + (13*C2K2*cosphi*(-BesselK(0,(math.sqrt(1.5)*R0)/τ) - BesselK(2,(math.sqrt(1.5)*R0)/τ)))/(5.*math.sqrt(6)*BesselK(3,(math.sqrt(1.5)*R0)/τ)) + (6*C3K2*chi*cosphi*(-BesselK(1,(math.sqrt(5)*R0)/(3.*τ)) - BesselK(3,(math.sqrt(5)*R0)/(3.*τ))))/(25.*math.sqrt(5)*BesselK(2,(math.sqrt(5)*R0)/(3.*τ))) + (7*C1K2*cosphi*(-BesselK(2,(math.sqrt(0.8333333333333334)*R0)/τ) - BesselK(4,(math.sqrt(0.8333333333333334)*R0)/τ)))/(3.*math.sqrt(30)*BesselK(3,(math.sqrt(0.8333333333333334)*R0)/τ)) + (7*C2K2*cosphi*(-BesselK(2,(math.sqrt(1.5)*R0)/τ) - BesselK(4,(math.sqrt(1.5)*R0)/τ)))/(5.*math.sqrt(6)*BesselK(3,(math.sqrt(1.5)*R0)/τ)) - (4*c3*chi*math.log(R0/τ))/75.
    eqn[5] = (13*C3K1*chi)/5. - (4*chi*G0)/3. + (33*c11*chi*sinphi)/4. + c12*chi*sinphi - (13*C3K2*chi*sinphi)/5. + (97*c9*chi*sinphi)/15. + (6*F1*sinphi)/5. - (297*chi*F22*sinphi)/50. - (891*chi*G2*sinphi)/50. + (1501*chi*M1*sinphi)/150. - (2954*chi*Q1*sinphi)/225. + chi*vt0 - (chi*G0*pow(R0,4))/(81.*pow(τ,4)) + (5*chi*F22*pow(R0,4)*sinphi)/(192.*pow(τ,4)) + (5*chi*G2*pow(R0,4)*sinphi)/(64.*pow(τ,4)) + (chi*G1*pow(R0,3))/(8.*pow(τ,3)) + (4*chi*F1*pow(R0,3)*sinphi)/(45.*pow(τ,3)) + (65*chi*G0*pow(R0,2))/(54.*pow(τ,2)) - (3*c9*chi*pow(R0,2)*sinphi)/(4.*pow(τ,2)) - (137*chi*F22*pow(R0,2)*sinphi)/(80.*pow(τ,2)) - (411*chi*G2*pow(R0,2)*sinphi)/(80.*pow(τ,2)) + (13*chi*M1*pow(R0,2)*sinphi)/(40.*pow(τ,2)) - (13*chi*Q1*pow(R0,2)*sinphi)/(40.*pow(τ,2)) - (c6*chi*R0)/τ - (2*G0*R0)/(3.*τ) - (97*chi*G1*R0)/(30.*τ) - (13*chi*F1*R0*sinphi)/(3.*τ) + (9*F22*R0*sinphi)/(5.*τ) + (27*G2*R0*sinphi)/(5.*τ) - (6*M1*R0*sinphi)/(5.*τ) + (6*Q1*R0*sinphi)/(5.*τ) + (12*C3K1*τ)/(5.*R0) - (c1*chi*τ)/(2.*R0) - (24*C3K2*sinphi*τ)/(5.*R0) - (14*C1K2*chi*sinphi*τ)/(5.*R0) - (14*C2K2*chi*sinphi*τ)/(5.*R0) + (39*c10*chi*sinphi*pow(τ,2))/(4.*pow(R0,2)) - (c7*chi*sinphi*pow(τ,2))/(4.*pow(R0,2)) - (59*c8*chi*sinphi*pow(τ,2))/(10.*pow(R0,2)) - (4*c1*chi*pow(τ,3))/pow(R0,3) + (36*c10*sinphi*pow(τ,3))/pow(R0,3) - (72*c8*sinphi*pow(τ,3))/(5.*pow(R0,3)) - (6*c7*chi*sinphi*pow(τ,4))/pow(R0,4) - (13*C3I2*chi*sinphi*BesselI(0,(math.sqrt(5)*R0)/(3.*τ)))/(5.*BesselI(0,(math.sqrt(5)*R1)/(3.*τ))) + (4*C3I2*sinphi*BesselI(1,(math.sqrt(5)*R0)/(3.*τ)))/(math.sqrt(5)*BesselI(0,(math.sqrt(5)*R1)/(3.*τ))) + (2*C1I2*chi*sinphi*τ*BesselI(1,(math.sqrt(0.8333333333333334)*R0)/τ))/(3.*R0*BesselI(1,(math.sqrt(0.8333333333333334)*R1)/τ)) + (26*C2I2*chi*sinphi*τ*BesselI(1,(math.sqrt(1.5)*R0)/τ))/(15.*R0*BesselI(1,(math.sqrt(1.5)*R1)/τ)) + (13*C3I1*chi*BesselI(1,(math.sqrt(5)*R0)/(3.*τ)))/(5.*BesselI(1,(math.sqrt(5)*R1)/(3.*τ))) + (12*C3I1*τ*BesselI(1,(math.sqrt(5)*R0)/(3.*τ)))/(5.*R0*BesselI(1,(math.sqrt(5)*R1)/(3.*τ))) - (4*math.sqrt(0.13333333333333333)*C1I2*chi*sinphi*(BesselI(0,(math.sqrt(0.8333333333333334)*R0)/τ) + BesselI(2,(math.sqrt(0.8333333333333334)*R0)/τ)))/(3.*BesselI(1,(math.sqrt(0.8333333333333334)*R1)/τ)) - (4*math.sqrt(0.6666666666666666)*C2I2*chi*sinphi*(BesselI(0,(math.sqrt(1.5)*R0)/τ) + BesselI(2,(math.sqrt(1.5)*R0)/τ)))/(5.*BesselI(1,(math.sqrt(1.5)*R1)/τ)) - (13*C3I2*chi*sinphi*BesselI(2,(math.sqrt(5)*R0)/(3.*τ)))/(5.*BesselI(0,(math.sqrt(5)*R1)/(3.*τ))) - (24*C3I2*sinphi*τ*BesselI(2,(math.sqrt(5)*R0)/(3.*τ)))/(5.*R0*BesselI(0,(math.sqrt(5)*R1)/(3.*τ))) - (2*C3I1*(BesselI(0,(math.sqrt(5)*R0)/(3.*τ)) + BesselI(2,(math.sqrt(5)*R0)/(3.*τ))))/(math.sqrt(5)*BesselI(1,(math.sqrt(5)*R1)/(3.*τ))) - (14*C1I2*chi*sinphi*τ*BesselI(3,(math.sqrt(0.8333333333333334)*R0)/τ))/(5.*R0*BesselI(1,(math.sqrt(0.8333333333333334)*R1)/τ)) - (14*C2I2*chi*sinphi*τ*BesselI(3,(math.sqrt(1.5)*R0)/τ))/(5.*R0*BesselI(1,(math.sqrt(1.5)*R1)/τ)) + (2*C3I2*sinphi*(BesselI(1,(math.sqrt(5)*R0)/(3.*τ)) + BesselI(3,(math.sqrt(5)*R0)/(3.*τ))))/(math.sqrt(5)*BesselI(0,(math.sqrt(5)*R1)/(3.*τ))) + (4*math.sqrt(0.13333333333333333)*C1I2*chi*sinphi*(BesselI(2,(math.sqrt(0.8333333333333334)*R0)/τ) + BesselI(4,(math.sqrt(0.8333333333333334)*R0)/τ)))/(3.*BesselI(1,(math.sqrt(0.8333333333333334)*R1)/τ)) + (4*math.sqrt(0.6666666666666666)*C2I2*chi*sinphi*(BesselI(2,(math.sqrt(1.5)*R0)/τ) + BesselI(4,(math.sqrt(1.5)*R0)/τ)))/(5.*BesselI(1,(math.sqrt(1.5)*R1)/τ)) - (2*C3K1*(-BesselK(0,(math.sqrt(5)*R0)/(3.*τ)) - BesselK(2,(math.sqrt(5)*R0)/(3.*τ))))/(math.sqrt(5)*BesselK(1,(math.sqrt(5)*R0)/(3.*τ))) - (13*C3K2*chi*sinphi*BesselK(0,(math.sqrt(5)*R0)/(3.*τ)))/(5.*BesselK(2,(math.sqrt(5)*R0)/(3.*τ))) - (4*C3K2*sinphi*BesselK(1,(math.sqrt(5)*R0)/(3.*τ)))/(math.sqrt(5)*BesselK(2,(math.sqrt(5)*R0)/(3.*τ))) + (2*C1K2*chi*sinphi*τ*BesselK(1,(math.sqrt(0.8333333333333334)*R0)/τ))/(3.*R0*BesselK(3,(math.sqrt(0.8333333333333334)*R0)/τ)) - (4*math.sqrt(0.13333333333333333)*C1K2*chi*sinphi*(-BesselK(0,(math.sqrt(0.8333333333333334)*R0)/τ) - BesselK(2,(math.sqrt(0.8333333333333334)*R0)/τ)))/(3.*BesselK(3,(math.sqrt(0.8333333333333334)*R0)/τ)) + (26*C2K2*chi*sinphi*τ*BesselK(1,(math.sqrt(1.5)*R0)/τ))/(15.*R0*BesselK(3,(math.sqrt(1.5)*R0)/τ)) - (4*math.sqrt(0.6666666666666666)*C2K2*chi*sinphi*(-BesselK(0,(math.sqrt(1.5)*R0)/τ) - BesselK(2,(math.sqrt(1.5)*R0)/τ)))/(5.*BesselK(3,(math.sqrt(1.5)*R0)/τ)) + (2*C3K2*sinphi*(-BesselK(1,(math.sqrt(5)*R0)/(3.*τ)) - BesselK(3,(math.sqrt(5)*R0)/(3.*τ))))/(math.sqrt(5)*BesselK(2,(math.sqrt(5)*R0)/(3.*τ))) + (4*math.sqrt(0.13333333333333333)*C1K2*chi*sinphi*(-BesselK(2,(math.sqrt(0.8333333333333334)*R0)/τ) - BesselK(4,(math.sqrt(0.8333333333333334)*R0)/τ)))/(3.*BesselK(3,(math.sqrt(0.8333333333333334)*R0)/τ)) + (4*math.sqrt(0.6666666666666666)*C2K2*chi*sinphi*(-BesselK(2,(math.sqrt(1.5)*R0)/τ) - BesselK(4,(math.sqrt(1.5)*R0)/τ)))/(5.*BesselK(3,(math.sqrt(1.5)*R0)/τ)) - (c8*chi*sinphi*math.log(R0/τ))/2.
    eqn[6] = -(c12*cosphi*ep1) + (2*C3I2*cosphi*ep1)/5. - (c8*cosphi*ep1)/2. - (4*C1I1*ev1)/3. + c4*ev1 - (8*C1I2*cosphi*ev1)/3. + (C1I1*ev1*fac)/3. - C2I1*ev1*fac + (5*C1I2*cosphi*ev1*fac)/3. - C2I2*cosphi*ev1*fac + (6*cosphi*ev1*F1*fac)/5. - cosphi*ev1*G11 - (ev1*fac*M0)/5. - (24*ev1*fac*M2)/25. - ev1*p1 - (2*ev1*fac*Q0)/15. - (16*ev1*fac*Q2)/25. + ep1*vn1 - (cosphi*ep1*F22*pow(R1,4))/(192.*pow(τ,4)) - (cosphi*ep1*G2*pow(R1,4))/(64.*pow(τ,4)) - (cosphi*ep1*F1*pow(R1,3))/(45.*pow(τ,3)) + (ev1*F2*pow(R1,3))/(3.*pow(τ,3)) + (3*cosphi*ev1*F22*pow(R1,3))/(8.*pow(τ,3)) - (cosphi*ev1*F22*fac*pow(R1,3))/(24.*pow(τ,3)) + (cosphi*ev1*G2*pow(R1,3))/(8.*pow(τ,3)) - (cosphi*ev1*fac*G2*pow(R1,3))/(8.*pow(τ,3)) - (ep1*M2*pow(R1,3))/(4.*pow(τ,3)) + (c9*cosphi*ep1*pow(R1,2))/(4.*pow(τ,2)) + (2*cosphi*ev1*F1*pow(R1,2))/(3.*pow(τ,2)) + (5*cosphi*ep1*F22*pow(R1,2))/(24.*pow(τ,2)) - (2*cosphi*ev1*F1*fac*pow(R1,2))/(15.*pow(τ,2)) + (5*cosphi*ep1*G2*pow(R1,2))/(8.*pow(τ,2)) - (7*cosphi*ep1*M1*pow(R1,2))/(20.*pow(τ,2)) + (4*ev1*M2*pow(R1,2))/(5.*pow(τ,2)) - (ev1*fac*M2*pow(R1,2))/(2.*pow(τ,2)) + (cosphi*ep1*Q1*pow(R1,2))/(60.*pow(τ,2)) + (8*ev1*Q2*pow(R1,2))/(15.*pow(τ,2)) - (ev1*fac*Q2*pow(R1,2))/(3.*pow(τ,2)) - (2*c9*cosphi*ev1*R1)/τ + (ev1*F0*R1)/τ + (52*cosphi*ep1*F1*R1)/(45.*τ) + (c9*cosphi*ev1*fac*R1)/τ - (ep1*M0*R1)/(2.*τ) + (3*cosphi*ev1*M1*R1)/(5.*τ) - (2*cosphi*ev1*fac*M1*R1)/(5.*τ) + (2*cosphi*ev1*Q1*R1)/(5.*τ) - (4*cosphi*ev1*fac*Q1*R1)/(15.*τ) - (c2*ep1*τ)/(2.*R1) + (2*c3*ep1*τ)/(5.*R1) + (c8*cosphi*ev1*τ)/R1 - (48*cosphi*ep1*F1*τ)/(25.*R1) + (c8*cosphi*ev1*fac*τ)/R1 + (3*c10*cosphi*ep1*pow(τ,2))/(2.*pow(R1,2)) - (c7*cosphi*ep1*pow(τ,2))/(4.*pow(R1,2)) - (5*c8*cosphi*ep1*pow(τ,2))/(3.*pow(R1,2)) + (c2*ev1*fac*pow(τ,2))/pow(R1,2) + (c7*cosphi*ev1*fac*pow(τ,3))/pow(R1,3) + (C1I1*ev1*fac*BesselI(2,(math.sqrt(0.8333333333333334)*R1)/τ))/BesselI(0,(math.sqrt(0.8333333333333334)*R1)/τ) + (C2I1*ev1*fac*BesselI(2,(math.sqrt(1.5)*R1)/τ))/BesselI(0,(math.sqrt(1.5)*R1)/τ) - (2*C3I2*cosphi*ep1*BesselI(2,(math.sqrt(5)*R1)/(3.*τ)))/(5.*BesselI(0,(math.sqrt(5)*R1)/(3.*τ))) + (C1I2*cosphi*ev1*fac*BesselI(3,(math.sqrt(0.8333333333333334)*R1)/τ))/BesselI(1,(math.sqrt(0.8333333333333334)*R1)/τ) + (C2I2*cosphi*ev1*fac*BesselI(3,(math.sqrt(1.5)*R1)/τ))/BesselI(1,(math.sqrt(1.5)*R1)/τ) - (4*C1K1*ev1*BesselK(0,(math.sqrt(0.8333333333333334)*R1)/τ))/(3.*BesselK(2,(math.sqrt(0.8333333333333334)*R0)/τ)) + (C1K1*ev1*fac*BesselK(0,(math.sqrt(0.8333333333333334)*R1)/τ))/(3.*BesselK(2,(math.sqrt(0.8333333333333334)*R0)/τ)) - (C2K1*ev1*fac*BesselK(0,(math.sqrt(1.5)*R1)/τ))/BesselK(2,(math.sqrt(1.5)*R0)/τ) + (2*C3K2*cosphi*ep1*BesselK(0,(math.sqrt(5)*R1)/(3.*τ)))/(5.*BesselK(2,(math.sqrt(5)*R0)/(3.*τ))) + (C1K1*ev1*fac*BesselK(2,(math.sqrt(0.8333333333333334)*R1)/τ))/BesselK(2,(math.sqrt(0.8333333333333334)*R0)/τ) + (C2K1*ev1*fac*BesselK(2,(math.sqrt(1.5)*R1)/τ))/BesselK(2,(math.sqrt(1.5)*R0)/τ) - (2*C3K2*cosphi*ep1*BesselK(2,(math.sqrt(5)*R1)/(3.*τ)))/(5.*BesselK(2,(math.sqrt(5)*R0)/(3.*τ))) - (8*C1K2*cosphi*ev1*BesselK(1,(math.sqrt(0.8333333333333334)*R1)/τ))/(3.*BesselK(3,(math.sqrt(0.8333333333333334)*R0)/τ)) + (5*C1K2*cosphi*ev1*fac*BesselK(1,(math.sqrt(0.8333333333333334)*R1)/τ))/(3.*BesselK(3,(math.sqrt(0.8333333333333334)*R0)/τ)) - (C2K2*cosphi*ev1*fac*BesselK(1,(math.sqrt(1.5)*R1)/τ))/BesselK(3,(math.sqrt(1.5)*R0)/τ) + (C1K2*cosphi*ev1*fac*BesselK(3,(math.sqrt(0.8333333333333334)*R1)/τ))/BesselK(3,(math.sqrt(0.8333333333333334)*R0)/τ) + (C2K2*cosphi*ev1*fac*BesselK(3,(math.sqrt(1.5)*R1)/τ))/BesselK(3,(math.sqrt(1.5)*R0)/τ) + (c8*cosphi*ep1*math.log(R1/τ))/2.
    eqn[7] = -(C3I1*chi)/5. + (4*chi*G0)/3. + C1I2*sinphi + C2I2*sinphi + (3*c11*chi*sinphi)/4. - c12*chi*sinphi + (C3I2*chi*sinphi)/5. + (11*c9*chi*sinphi)/15. + (3*F1*sinphi)/5. - (27*chi*F22*sinphi)/50. - (81*chi*G2*sinphi)/50. + (119*chi*M1*sinphi)/150. - (286*chi*Q1*sinphi)/225. - chi*vt1 + (chi*G0*pow(R1,4))/(81.*pow(τ,4)) - (5*chi*F22*pow(R1,4)*sinphi)/(192.*pow(τ,4)) - (5*chi*G2*pow(R1,4)*sinphi)/(64.*pow(τ,4)) + (G0*pow(R1,3))/(27.*pow(τ,3)) - (chi*G1*pow(R1,3))/(8.*pow(τ,3)) - (4*chi*F1*pow(R1,3)*sinphi)/(45.*pow(τ,3)) - (F22*pow(R1,3)*sinphi)/(12.*pow(τ,3)) - (G2*pow(R1,3)*sinphi)/(4.*pow(τ,3)) - (29*chi*G0*pow(R1,2))/(54.*pow(τ,2)) - (G1*pow(R1,2))/(4.*pow(τ,2)) + (3*c9*chi*pow(R1,2)*sinphi)/(4.*pow(τ,2)) - (F1*pow(R1,2)*sinphi)/(5.*pow(τ,2)) + (29*chi*F22*pow(R1,2)*sinphi)/(80.*pow(τ,2)) + (87*chi*G2*pow(R1,2)*sinphi)/(80.*pow(τ,2)) - (chi*M1*pow(R1,2)*sinphi)/(40.*pow(τ,2)) + (chi*Q1*pow(R1,2)*sinphi)/(40.*pow(τ,2)) + (c6*chi*R1)/τ - (G0*R1)/(3.*τ) - (11*chi*G1*R1)/(30.*τ) + (c9*R1*sinphi)/τ + (29*chi*F1*R1*sinphi)/(15.*τ) - (M1*R1*sinphi)/(5.*τ) - (2*Q1*R1*sinphi)/(15.*τ) + (c1*chi*τ)/(2.*R1) - (2*C1I2*chi*sinphi*τ)/(3.*R1) - (26*C2I2*chi*sinphi*τ)/(15.*R1) - (c1*pow(τ,2))/pow(R1,2) - (3*c10*chi*sinphi*pow(τ,2))/(4.*pow(R1,2)) + (c7*chi*sinphi*pow(τ,2))/(4.*pow(R1,2)) + (23*c8*chi*sinphi*pow(τ,2))/(10.*pow(R1,2)) + (4*c1*chi*pow(τ,3))/pow(R1,3) - (c7*sinphi*pow(τ,3))/pow(R1,3) + (6*c7*chi*sinphi*pow(τ,4))/pow(R1,4) + (4*math.sqrt(0.13333333333333333)*C1I2*chi*sinphi*(BesselI(0,(math.sqrt(0.8333333333333334)*R1)/τ) + BesselI(2,(math.sqrt(0.8333333333333334)*R1)/τ)))/(3.*BesselI(1,(math.sqrt(0.8333333333333334)*R1)/τ)) + (4*math.sqrt(0.6666666666666666)*C2I2*chi*sinphi*(BesselI(0,(math.sqrt(1.5)*R1)/τ) + BesselI(2,(math.sqrt(1.5)*R1)/τ)))/(5.*BesselI(1,(math.sqrt(1.5)*R1)/τ)) + (C3I2*chi*sinphi*BesselI(2,(math.sqrt(5)*R1)/(3.*τ)))/(5.*BesselI(0,(math.sqrt(5)*R1)/(3.*τ))) - (C1I2*sinphi*BesselI(3,(math.sqrt(0.8333333333333334)*R1)/τ))/BesselI(1,(math.sqrt(0.8333333333333334)*R1)/τ) + (14*C1I2*chi*sinphi*τ*BesselI(3,(math.sqrt(0.8333333333333334)*R1)/τ))/(5.*R1*BesselI(1,(math.sqrt(0.8333333333333334)*R1)/τ)) - (C2I2*sinphi*BesselI(3,(math.sqrt(1.5)*R1)/τ))/BesselI(1,(math.sqrt(1.5)*R1)/τ) + (14*C2I2*chi*sinphi*τ*BesselI(3,(math.sqrt(1.5)*R1)/τ))/(5.*R1*BesselI(1,(math.sqrt(1.5)*R1)/τ)) - (4*math.sqrt(0.13333333333333333)*C1I2*chi*sinphi*(BesselI(2,(math.sqrt(0.8333333333333334)*R1)/τ) + BesselI(4,(math.sqrt(0.8333333333333334)*R1)/τ)))/(3.*BesselI(1,(math.sqrt(0.8333333333333334)*R1)/τ)) - (4*math.sqrt(0.6666666666666666)*C2I2*chi*sinphi*(BesselI(2,(math.sqrt(1.5)*R1)/τ) + BesselI(4,(math.sqrt(1.5)*R1)/τ)))/(5.*BesselI(1,(math.sqrt(1.5)*R1)/τ)) - (C3K1*chi*BesselK(1,(math.sqrt(5)*R1)/(3.*τ)))/(5.*BesselK(1,(math.sqrt(5)*R0)/(3.*τ))) + (C3K2*chi*sinphi*BesselK(0,(math.sqrt(5)*R1)/(3.*τ)))/(5.*BesselK(2,(math.sqrt(5)*R0)/(3.*τ))) + (C3K2*chi*sinphi*BesselK(2,(math.sqrt(5)*R1)/(3.*τ)))/(5.*BesselK(2,(math.sqrt(5)*R0)/(3.*τ))) + (C1K2*sinphi*BesselK(1,(math.sqrt(0.8333333333333334)*R1)/τ))/BesselK(3,(math.sqrt(0.8333333333333334)*R0)/τ) - (2*C1K2*chi*sinphi*τ*BesselK(1,(math.sqrt(0.8333333333333334)*R1)/τ))/(3.*R1*BesselK(3,(math.sqrt(0.8333333333333334)*R0)/τ)) + (4*math.sqrt(0.13333333333333333)*C1K2*chi*sinphi*(-BesselK(0,(math.sqrt(0.8333333333333334)*R1)/τ) - BesselK(2,(math.sqrt(0.8333333333333334)*R1)/τ)))/(3.*BesselK(3,(math.sqrt(0.8333333333333334)*R0)/τ)) + (C2K2*sinphi*BesselK(1,(math.sqrt(1.5)*R1)/τ))/BesselK(3,(math.sqrt(1.5)*R0)/τ) - (26*C2K2*chi*sinphi*τ*BesselK(1,(math.sqrt(1.5)*R1)/τ))/(15.*R1*BesselK(3,(math.sqrt(1.5)*R0)/τ)) + (4*math.sqrt(0.6666666666666666)*C2K2*chi*sinphi*(-BesselK(0,(math.sqrt(1.5)*R1)/τ) - BesselK(2,(math.sqrt(1.5)*R1)/τ)))/(5.*BesselK(3,(math.sqrt(1.5)*R0)/τ)) - (C1K2*sinphi*BesselK(3,(math.sqrt(0.8333333333333334)*R1)/τ))/BesselK(3,(math.sqrt(0.8333333333333334)*R0)/τ) + (14*C1K2*chi*sinphi*τ*BesselK(3,(math.sqrt(0.8333333333333334)*R1)/τ))/(5.*R1*BesselK(3,(math.sqrt(0.8333333333333334)*R0)/τ)) - (C2K2*sinphi*BesselK(3,(math.sqrt(1.5)*R1)/τ))/BesselK(3,(math.sqrt(1.5)*R0)/τ) + (14*C2K2*chi*sinphi*τ*BesselK(3,(math.sqrt(1.5)*R1)/τ))/(5.*R1*BesselK(3,(math.sqrt(1.5)*R0)/τ)) - (4*math.sqrt(0.13333333333333333)*C1K2*chi*sinphi*(-BesselK(2,(math.sqrt(0.8333333333333334)*R1)/τ) - BesselK(4,(math.sqrt(0.8333333333333334)*R1)/τ)))/(3.*BesselK(3,(math.sqrt(0.8333333333333334)*R0)/τ)) - (4*math.sqrt(0.6666666666666666)*C2K2*chi*sinphi*(-BesselK(2,(math.sqrt(1.5)*R1)/τ) - BesselK(4,(math.sqrt(1.5)*R1)/τ)))/(5.*BesselK(3,(math.sqrt(1.5)*R0)/τ)) + (c8*chi*sinphi*math.log(R1/τ))/2.
    eqn[8] = (-9*C1I1*chi)/10. - (C2I1*chi)/2. + 2*c5*chi + (15*c11*cosphi)/4. - C3I2*cosphi + 3*c9*cosphi - (13*C1I2*chi*cosphi)/10. - (C2I2*chi*cosphi)/2. - (9*chi*cosphi*F1)/25. - (27*cosphi*F22)/10. - (81*cosphi*G2)/10. + (91*chi*M0)/50. + (9*cosphi*M1)/2. - (12*chi*M2)/25. - (149*chi*Q0)/75. - 6*cosphi*Q1 - (8*chi*Q2)/25. - 2*chi*θ1 + (chi*M2*pow(R1,4))/(30.*pow(τ,4)) - (chi*Q2*pow(R1,4))/(30.*pow(τ,4)) - (chi*cosphi*F22*pow(R1,3))/(48.*pow(τ,3)) - (chi*cosphi*G2*pow(R1,3))/(16.*pow(τ,3)) + (chi*cosphi*M1*pow(R1,3))/(15.*pow(τ,3)) + (M2*pow(R1,3))/(4.*pow(τ,3)) - (chi*cosphi*Q1*pow(R1,3))/(15.*pow(τ,3)) - (Q2*pow(R1,3))/(4.*pow(τ,3)) - (chi*cosphi*F1*pow(R1,2))/(15.*pow(τ,2)) - (3*cosphi*F22*pow(R1,2))/(16.*pow(τ,2)) - (9*cosphi*G2*pow(R1,2))/(16.*pow(τ,2)) + (2*chi*M0*pow(R1,2))/(15.*pow(τ,2)) + (3*cosphi*M1*pow(R1,2))/(8.*pow(τ,2)) - (9*chi*M2*pow(R1,2))/(100.*pow(τ,2)) - (2*chi*Q0*pow(R1,2))/(15.*pow(τ,2)) - (3*cosphi*Q1*pow(R1,2))/(8.*pow(τ,2)) + (37*chi*Q2*pow(R1,2))/(50.*pow(τ,2)) + (2*c11*chi*cosphi*R1)/τ + (c9*chi*cosphi*R1)/(2.*τ) - (cosphi*F1*R1)/(2.*τ) - (18*chi*cosphi*F22*R1)/(25.*τ) - (54*chi*cosphi*G2*R1)/(25.*τ) + (M0*R1)/(2.*τ) + (11*chi*cosphi*M1*R1)/(5.*τ) - (Q0*R1)/(2.*τ) - (38*chi*cosphi*Q1*R1)/(15.*τ) - (c3*τ)/R1 + (2*c10*chi*cosphi*τ)/R1 + (c8*chi*cosphi*τ)/(2.*R1) + (c2*chi*pow(τ,2))/(2.*pow(R1,2)) + (48*c3*chi*pow(τ,2))/(25.*pow(R1,2)) - (15*c10*cosphi*pow(τ,2))/(4.*pow(R1,2)) + (3*c8*cosphi*pow(τ,2))/(2.*pow(R1,2)) + (72*c10*chi*cosphi*pow(τ,3))/(5.*pow(R1,3)) + (c7*chi*cosphi*pow(τ,3))/(2.*pow(R1,3)) - (144*c8*chi*cosphi*pow(τ,3))/(25.*pow(R1,3)) - (24*C3I2*chi*cosphi*BesselI(1,(math.sqrt(5)*R1)/(3.*τ)))/(5.*math.sqrt(5)*BesselI(0,(math.sqrt(5)*R1)/(3.*τ))) + (C1I1*chi*BesselI(2,(math.sqrt(0.8333333333333334)*R1)/τ))/(2.*BesselI(0,(math.sqrt(0.8333333333333334)*R1)/τ)) + (C2I1*chi*BesselI(2,(math.sqrt(1.5)*R1)/τ))/(2.*BesselI(0,(math.sqrt(1.5)*R1)/τ)) + (C3I2*cosphi*BesselI(2,(math.sqrt(5)*R1)/(3.*τ)))/BesselI(0,(math.sqrt(5)*R1)/(3.*τ)) + (48*C3I2*chi*cosphi*τ*BesselI(2,(math.sqrt(5)*R1)/(3.*τ)))/(25.*R1*BesselI(0,(math.sqrt(5)*R1)/(3.*τ))) + (C1I2*chi*cosphi*BesselI(3,(math.sqrt(0.8333333333333334)*R1)/τ))/(2.*BesselI(1,(math.sqrt(0.8333333333333334)*R1)/τ)) + (C2I2*chi*cosphi*BesselI(3,(math.sqrt(1.5)*R1)/τ))/(2.*BesselI(1,(math.sqrt(1.5)*R1)/τ)) + (12*C3I2*chi*cosphi*(BesselI(1,(math.sqrt(5)*R1)/(3.*τ)) + BesselI(3,(math.sqrt(5)*R1)/(3.*τ))))/(5.*math.sqrt(5)*BesselI(0,(math.sqrt(5)*R1)/(3.*τ))) - (9*C1K1*chi*BesselK(0,(math.sqrt(0.8333333333333334)*R1)/τ))/(10.*BesselK(2,(math.sqrt(0.8333333333333334)*R0)/τ)) - (C2K1*chi*BesselK(0,(math.sqrt(1.5)*R1)/τ))/(2.*BesselK(2,(math.sqrt(1.5)*R0)/τ)) - (C3K2*cosphi*BesselK(0,(math.sqrt(5)*R1)/(3.*τ)))/BesselK(2,(math.sqrt(5)*R0)/(3.*τ)) + (24*C3K2*chi*cosphi*BesselK(1,(math.sqrt(5)*R1)/(3.*τ)))/(5.*math.sqrt(5)*BesselK(2,(math.sqrt(5)*R0)/(3.*τ))) + (C1K1*chi*BesselK(2,(math.sqrt(0.8333333333333334)*R1)/τ))/(2.*BesselK(2,(math.sqrt(0.8333333333333334)*R0)/τ)) + (C2K1*chi*BesselK(2,(math.sqrt(1.5)*R1)/τ))/(2.*BesselK(2,(math.sqrt(1.5)*R0)/τ)) + (C3K2*cosphi*BesselK(2,(math.sqrt(5)*R1)/(3.*τ)))/BesselK(2,(math.sqrt(5)*R0)/(3.*τ)) + (48*C3K2*chi*cosphi*τ*BesselK(2,(math.sqrt(5)*R1)/(3.*τ)))/(25.*R1*BesselK(2,(math.sqrt(5)*R0)/(3.*τ))) - (13*C1K2*chi*cosphi*BesselK(1,(math.sqrt(0.8333333333333334)*R1)/τ))/(10.*BesselK(3,(math.sqrt(0.8333333333333334)*R0)/τ)) - (C2K2*chi*cosphi*BesselK(1,(math.sqrt(1.5)*R1)/τ))/(2.*BesselK(3,(math.sqrt(1.5)*R0)/τ)) + (C1K2*chi*cosphi*BesselK(3,(math.sqrt(0.8333333333333334)*R1)/τ))/(2.*BesselK(3,(math.sqrt(0.8333333333333334)*R0)/τ)) + (C2K2*chi*cosphi*BesselK(3,(math.sqrt(1.5)*R1)/τ))/(2.*BesselK(3,(math.sqrt(1.5)*R0)/τ)) + (12*C3K2*chi*cosphi*(-BesselK(1,(math.sqrt(5)*R1)/(3.*τ)) - BesselK(3,(math.sqrt(5)*R1)/(3.*τ))))/(5.*math.sqrt(5)*BesselK(2,(math.sqrt(5)*R0)/(3.*τ))) - (8*c3*chi*math.log(R1/τ))/15.
    eqn[9] = (17*C1I1*chi)/25. - (7*C2I1*chi)/5. - (2*c5*chi)/5. + (2*c9*cosphi)/5. + (69*C1I2*chi*cosphi)/25. - (7*C2I2*chi*cosphi)/5. + (234*chi*cosphi*F1)/125. - (83*chi*M0)/125. - (8*cosphi*M1)/25. - (168*chi*M2)/125. + (74*chi*Q0)/375. - (16*cosphi*Q1)/75. - (112*chi*Q2)/125. + (2*chi*θ1)/5. - (chi*M2*pow(R1,4))/(150.*pow(τ,4)) + (chi*Q2*pow(R1,4))/(150.*pow(τ,4)) - (7*chi*cosphi*F22*pow(R1,3))/(120.*pow(τ,3)) - (7*chi*cosphi*G2*pow(R1,3))/(40.*pow(τ,3)) - (chi*cosphi*M1*pow(R1,3))/(75.*pow(τ,3)) + (chi*cosphi*Q1*pow(R1,3))/(75.*pow(τ,3)) - (14*chi*cosphi*F1*pow(R1,2))/(75.*pow(τ,2)) - (3*cosphi*F22*pow(R1,2))/(20.*pow(τ,2)) - (9*cosphi*G2*pow(R1,2))/(20.*pow(τ,2)) - (2*chi*M0*pow(R1,2))/(75.*pow(τ,2)) - (183*chi*M2*pow(R1,2))/(250.*pow(τ,2)) + (2*chi*Q0*pow(R1,2))/(75.*pow(τ,2)) - (81*chi*Q2*pow(R1,2))/(125.*pow(τ,2)) - (2*c11*chi*cosphi*R1)/(5.*τ) + (7*c9*chi*cosphi*R1)/(5.*τ) - (4*cosphi*F1*R1)/(15.*τ) + (18*chi*cosphi*F22*R1)/(125.*τ) + (54*chi*cosphi*G2*R1)/(125.*τ) - (26*chi*cosphi*M1*R1)/(25.*τ) - (18*M2*R1)/(25.*τ) + (8*chi*cosphi*Q1*R1)/(75.*τ) - (12*Q2*R1)/(25.*τ) - (4*C1I2*cosphi*τ)/(5.*R1) - (4*C2I2*cosphi*τ)/(5.*R1) - (2*c10*chi*cosphi*τ)/(5.*R1) + (7*c8*chi*cosphi*τ)/(5.*R1) - (36*cosphi*F1*τ)/(25.*R1) + (7*c2*chi*pow(τ,2))/(5.*pow(R1,2)) - (48*c3*chi*pow(τ,2))/(125.*pow(R1,2)) - (14*c8*cosphi*pow(τ,2))/(5.*pow(R1,2)) - (4*c2*pow(τ,3))/pow(R1,3) - (72*c10*chi*cosphi*pow(τ,3))/(25.*pow(R1,3)) + (7*c7*chi*cosphi*pow(τ,3))/(5.*pow(R1,3)) + (144*c8*chi*cosphi*pow(τ,3))/(125.*pow(R1,3)) - (6*c7*cosphi*pow(τ,4))/pow(R1,4) + (math.sqrt(0.13333333333333333)*C1I1*BesselI(1,(math.sqrt(0.8333333333333334)*R1)/τ))/BesselI(0,(math.sqrt(0.8333333333333334)*R1)/τ) - (3*math.sqrt(6)*C2I1*BesselI(1,(math.sqrt(1.5)*R1)/τ))/(5.*BesselI(0,(math.sqrt(1.5)*R1)/τ)) + (24*C3I2*chi*cosphi*BesselI(1,(math.sqrt(5)*R1)/(3.*τ)))/(25.*math.sqrt(5)*BesselI(0,(math.sqrt(5)*R1)/(3.*τ))) + (7*C1I1*chi*BesselI(2,(math.sqrt(0.8333333333333334)*R1)/τ))/(5.*BesselI(0,(math.sqrt(0.8333333333333334)*R1)/τ)) - (8*C1I1*τ*BesselI(2,(math.sqrt(0.8333333333333334)*R1)/τ))/(5.*R1*BesselI(0,(math.sqrt(0.8333333333333334)*R1)/τ)) + (math.sqrt(0.8333333333333334)*C1I2*cosphi*(BesselI(0,(math.sqrt(0.8333333333333334)*R1)/τ) + BesselI(2,(math.sqrt(0.8333333333333334)*R1)/τ)))/BesselI(1,(math.sqrt(0.8333333333333334)*R1)/τ) + (7*C2I1*chi*BesselI(2,(math.sqrt(1.5)*R1)/τ))/(5.*BesselI(0,(math.sqrt(1.5)*R1)/τ)) - (8*C2I1*τ*BesselI(2,(math.sqrt(1.5)*R1)/τ))/(5.*R1*BesselI(0,(math.sqrt(1.5)*R1)/τ)) - (3*math.sqrt(1.5)*C2I2*cosphi*(BesselI(0,(math.sqrt(1.5)*R1)/τ) + BesselI(2,(math.sqrt(1.5)*R1)/τ)))/(5.*BesselI(1,(math.sqrt(1.5)*R1)/τ)) - (48*C3I2*chi*cosphi*τ*BesselI(2,(math.sqrt(5)*R1)/(3.*τ)))/(125.*R1*BesselI(0,(math.sqrt(5)*R1)/(3.*τ))) + (7*C1I2*chi*cosphi*BesselI(3,(math.sqrt(0.8333333333333334)*R1)/τ))/(5.*BesselI(1,(math.sqrt(0.8333333333333334)*R1)/τ)) - (12*C1I2*cosphi*τ*BesselI(3,(math.sqrt(0.8333333333333334)*R1)/τ))/(5.*R1*BesselI(1,(math.sqrt(0.8333333333333334)*R1)/τ)) + (math.sqrt(0.3)*C1I1*(BesselI(1,(math.sqrt(0.8333333333333334)*R1)/τ) + BesselI(3,(math.sqrt(0.8333333333333334)*R1)/τ)))/BesselI(0,(math.sqrt(0.8333333333333334)*R1)/τ) + (7*C2I2*chi*cosphi*BesselI(3,(math.sqrt(1.5)*R1)/τ))/(5.*BesselI(1,(math.sqrt(1.5)*R1)/τ)) - (12*C2I2*cosphi*τ*BesselI(3,(math.sqrt(1.5)*R1)/τ))/(5.*R1*BesselI(1,(math.sqrt(1.5)*R1)/τ)) + (3*math.sqrt(1.5)*C2I1*(BesselI(1,(math.sqrt(1.5)*R1)/τ) + BesselI(3,(math.sqrt(1.5)*R1)/τ)))/(5.*BesselI(0,(math.sqrt(1.5)*R1)/τ)) - (12*C3I2*chi*cosphi*(BesselI(1,(math.sqrt(5)*R1)/(3.*τ)) + BesselI(3,(math.sqrt(5)*R1)/(3.*τ))))/(25.*math.sqrt(5)*BesselI(0,(math.sqrt(5)*R1)/(3.*τ))) + (math.sqrt(0.3)*C1I2*cosphi*(BesselI(2,(math.sqrt(0.8333333333333334)*R1)/τ) + BesselI(4,(math.sqrt(0.8333333333333334)*R1)/τ)))/BesselI(1,(math.sqrt(0.8333333333333334)*R1)/τ) + (3*math.sqrt(1.5)*C2I2*cosphi*(BesselI(2,(math.sqrt(1.5)*R1)/τ) + BesselI(4,(math.sqrt(1.5)*R1)/τ)))/(5.*BesselI(1,(math.sqrt(1.5)*R1)/τ)) + (17*C1K1*chi*BesselK(0,(math.sqrt(0.8333333333333334)*R1)/τ))/(25.*BesselK(2,(math.sqrt(0.8333333333333334)*R0)/τ)) - (math.sqrt(0.13333333333333333)*C1K1*BesselK(1,(math.sqrt(0.8333333333333334)*R1)/τ))/BesselK(2,(math.sqrt(0.8333333333333334)*R0)/τ) - (7*C2K1*chi*BesselK(0,(math.sqrt(1.5)*R1)/τ))/(5.*BesselK(2,(math.sqrt(1.5)*R0)/τ)) + (3*math.sqrt(6)*C2K1*BesselK(1,(math.sqrt(1.5)*R1)/τ))/(5.*BesselK(2,(math.sqrt(1.5)*R0)/τ)) - (24*C3K2*chi*cosphi*BesselK(1,(math.sqrt(5)*R1)/(3.*τ)))/(25.*math.sqrt(5)*BesselK(2,(math.sqrt(5)*R0)/(3.*τ))) + (7*C1K1*chi*BesselK(2,(math.sqrt(0.8333333333333334)*R1)/τ))/(5.*BesselK(2,(math.sqrt(0.8333333333333334)*R0)/τ)) - (8*C1K1*τ*BesselK(2,(math.sqrt(0.8333333333333334)*R1)/τ))/(5.*R1*BesselK(2,(math.sqrt(0.8333333333333334)*R0)/τ)) + (7*C2K1*chi*BesselK(2,(math.sqrt(1.5)*R1)/τ))/(5.*BesselK(2,(math.sqrt(1.5)*R0)/τ)) - (8*C2K1*τ*BesselK(2,(math.sqrt(1.5)*R1)/τ))/(5.*R1*BesselK(2,(math.sqrt(1.5)*R0)/τ)) - (48*C3K2*chi*cosphi*τ*BesselK(2,(math.sqrt(5)*R1)/(3.*τ)))/(125.*R1*BesselK(2,(math.sqrt(5)*R0)/(3.*τ))) + (69*C1K2*chi*cosphi*BesselK(1,(math.sqrt(0.8333333333333334)*R1)/τ))/(25.*BesselK(3,(math.sqrt(0.8333333333333334)*R0)/τ)) - (4*C1K2*cosphi*τ*BesselK(1,(math.sqrt(0.8333333333333334)*R1)/τ))/(5.*R1*BesselK(3,(math.sqrt(0.8333333333333334)*R0)/τ)) + (math.sqrt(0.8333333333333334)*C1K2*cosphi*(-BesselK(0,(math.sqrt(0.8333333333333334)*R1)/τ) - BesselK(2,(math.sqrt(0.8333333333333334)*R1)/τ)))/BesselK(3,(math.sqrt(0.8333333333333334)*R0)/τ) - (7*C2K2*chi*cosphi*BesselK(1,(math.sqrt(1.5)*R1)/τ))/(5.*BesselK(3,(math.sqrt(1.5)*R0)/τ)) - (4*C2K2*cosphi*τ*BesselK(1,(math.sqrt(1.5)*R1)/τ))/(5.*R1*BesselK(3,(math.sqrt(1.5)*R0)/τ)) - (3*math.sqrt(1.5)*C2K2*cosphi*(-BesselK(0,(math.sqrt(1.5)*R1)/τ) - BesselK(2,(math.sqrt(1.5)*R1)/τ)))/(5.*BesselK(3,(math.sqrt(1.5)*R0)/τ)) + (math.sqrt(0.3)*C1K1*(-BesselK(1,(math.sqrt(0.8333333333333334)*R1)/τ) - BesselK(3,(math.sqrt(0.8333333333333334)*R1)/τ)))/BesselK(2,(math.sqrt(0.8333333333333334)*R0)/τ) + (7*C1K2*chi*cosphi*BesselK(3,(math.sqrt(0.8333333333333334)*R1)/τ))/(5.*BesselK(3,(math.sqrt(0.8333333333333334)*R0)/τ)) - (12*C1K2*cosphi*τ*BesselK(3,(math.sqrt(0.8333333333333334)*R1)/τ))/(5.*R1*BesselK(3,(math.sqrt(0.8333333333333334)*R0)/τ)) + (3*math.sqrt(1.5)*C2K1*(-BesselK(1,(math.sqrt(1.5)*R1)/τ) - BesselK(3,(math.sqrt(1.5)*R1)/τ)))/(5.*BesselK(2,(math.sqrt(1.5)*R0)/τ)) + (7*C2K2*chi*cosphi*BesselK(3,(math.sqrt(1.5)*R1)/τ))/(5.*BesselK(3,(math.sqrt(1.5)*R0)/τ)) - (12*C2K2*cosphi*τ*BesselK(3,(math.sqrt(1.5)*R1)/τ))/(5.*R1*BesselK(3,(math.sqrt(1.5)*R0)/τ)) - (12*C3K2*chi*cosphi*(-BesselK(1,(math.sqrt(5)*R1)/(3.*τ)) - BesselK(3,(math.sqrt(5)*R1)/(3.*τ))))/(25.*math.sqrt(5)*BesselK(2,(math.sqrt(5)*R0)/(3.*τ))) + (math.sqrt(0.3)*C1K2*cosphi*(-BesselK(2,(math.sqrt(0.8333333333333334)*R1)/τ) - BesselK(4,(math.sqrt(0.8333333333333334)*R1)/τ)))/BesselK(3,(math.sqrt(0.8333333333333334)*R0)/τ) + (3*math.sqrt(1.5)*C2K2*cosphi*(-BesselK(2,(math.sqrt(1.5)*R1)/τ) - BesselK(4,(math.sqrt(1.5)*R1)/τ)))/(5.*BesselK(3,(math.sqrt(1.5)*R0)/τ)) + (8*c3*chi*math.log(R1/τ))/75.
    eqn[10] = (4*C1I1*chi)/25. - (4*C2I1*chi)/5. + (c5*chi)/5. + (2*c9*cosphi)/15. - (22*C1I2*chi*cosphi)/25. - (14*C2I2*chi*cosphi)/5. - (192*chi*cosphi*F1)/125. + (4*chi*M0)/125. - (8*cosphi*M1)/75. - (96*chi*M2)/125. - (112*chi*Q0)/375. - (16*cosphi*Q1)/225. - (64*chi*Q2)/125. - (chi*θ1)/5. + (chi*M2*pow(R1,4))/(300.*pow(τ,4)) - (chi*Q2*pow(R1,4))/(300.*pow(τ,4)) + (chi*cosphi*F22*pow(R1,3))/(20.*pow(τ,3)) + (3*chi*cosphi*G2*pow(R1,3))/(20.*pow(τ,3)) + (chi*cosphi*M1*pow(R1,3))/(150.*pow(τ,3)) - (chi*cosphi*Q1*pow(R1,3))/(150.*pow(τ,3)) + (4*chi*cosphi*F1*pow(R1,2))/(25.*pow(τ,2)) + (7*cosphi*F22*pow(R1,2))/(60.*pow(τ,2)) + (7*cosphi*G2*pow(R1,2))/(20.*pow(τ,2)) + (chi*M0*pow(R1,2))/(75.*pow(τ,2)) + (27*chi*M2*pow(R1,2))/(125.*pow(τ,2)) - (chi*Q0*pow(R1,2))/(75.*pow(τ,2)) + (28*chi*Q2*pow(R1,2))/(125.*pow(τ,2)) + (c11*chi*cosphi*R1)/(5.*τ) - (6*c9*chi*cosphi*R1)/(5.*τ) + (8*cosphi*F1*R1)/(45.*τ) - (9*chi*cosphi*F22*R1)/(125.*τ) - (27*chi*cosphi*G2*R1)/(125.*τ) + (8*chi*cosphi*M1*R1)/(25.*τ) - (6*M2*R1)/(25.*τ) - (14*chi*cosphi*Q1*R1)/(75.*τ) - (4*Q2*R1)/(25.*τ) + (16*C1I2*cosphi*τ)/(15.*R1) + (16*C2I2*cosphi*τ)/(15.*R1) + (c10*chi*cosphi*τ)/(5.*R1) - (6*c8*chi*cosphi*τ)/(5.*R1) + (48*cosphi*F1*τ)/(25.*R1) - (6*c2*chi*pow(τ,2))/(5.*pow(R1,2)) + (24*c3*chi*pow(τ,2))/(125.*pow(R1,2)) + (46*c8*cosphi*pow(τ,2))/(15.*pow(R1,2)) + (4*c2*pow(τ,3))/pow(R1,3) + (36*c10*chi*cosphi*pow(τ,3))/(25.*pow(R1,3)) - (6*c7*chi*cosphi*pow(τ,3))/(5.*pow(R1,3)) - (72*c8*chi*cosphi*pow(τ,3))/(125.*pow(R1,3)) + (6*c7*cosphi*pow(τ,4))/pow(R1,4) + (math.sqrt(0.13333333333333333)*C1I1*BesselI(1,(math.sqrt(0.8333333333333334)*R1)/τ))/(3.*BesselI(0,(math.sqrt(0.8333333333333334)*R1)/τ)) - (math.sqrt(6)*C2I1*BesselI(1,(math.sqrt(1.5)*R1)/τ))/(5.*BesselI(0,(math.sqrt(1.5)*R1)/τ)) - (12*C3I2*chi*cosphi*BesselI(1,(math.sqrt(5)*R1)/(3.*τ)))/(25.*math.sqrt(5)*BesselI(0,(math.sqrt(5)*R1)/(3.*τ))) - (6*C1I1*chi*BesselI(2,(math.sqrt(0.8333333333333334)*R1)/τ))/(5.*BesselI(0,(math.sqrt(0.8333333333333334)*R1)/τ)) + (32*C1I1*τ*BesselI(2,(math.sqrt(0.8333333333333334)*R1)/τ))/(15.*R1*BesselI(0,(math.sqrt(0.8333333333333334)*R1)/τ)) - (math.sqrt(0.8333333333333334)*C1I2*cosphi*(BesselI(0,(math.sqrt(0.8333333333333334)*R1)/τ) + BesselI(2,(math.sqrt(0.8333333333333334)*R1)/τ)))/(3.*BesselI(1,(math.sqrt(0.8333333333333334)*R1)/τ)) - (6*C2I1*chi*BesselI(2,(math.sqrt(1.5)*R1)/τ))/(5.*BesselI(0,(math.sqrt(1.5)*R1)/τ)) + (32*C2I1*τ*BesselI(2,(math.sqrt(1.5)*R1)/τ))/(15.*R1*BesselI(0,(math.sqrt(1.5)*R1)/τ)) - (13*C2I2*cosphi*(BesselI(0,(math.sqrt(1.5)*R1)/τ) + BesselI(2,(math.sqrt(1.5)*R1)/τ)))/(5.*math.sqrt(6)*BesselI(1,(math.sqrt(1.5)*R1)/τ)) + (24*C3I2*chi*cosphi*τ*BesselI(2,(math.sqrt(5)*R1)/(3.*τ)))/(125.*R1*BesselI(0,(math.sqrt(5)*R1)/(3.*τ))) - (6*C1I2*chi*cosphi*BesselI(3,(math.sqrt(0.8333333333333334)*R1)/τ))/(5.*BesselI(1,(math.sqrt(0.8333333333333334)*R1)/τ)) + (16*C1I2*cosphi*τ*BesselI(3,(math.sqrt(0.8333333333333334)*R1)/τ))/(5.*R1*BesselI(1,(math.sqrt(0.8333333333333334)*R1)/τ)) - (7*C1I1*(BesselI(1,(math.sqrt(0.8333333333333334)*R1)/τ) + BesselI(3,(math.sqrt(0.8333333333333334)*R1)/τ)))/(3.*math.sqrt(30)*BesselI(0,(math.sqrt(0.8333333333333334)*R1)/τ)) - (6*C2I2*chi*cosphi*BesselI(3,(math.sqrt(1.5)*R1)/τ))/(5.*BesselI(1,(math.sqrt(1.5)*R1)/τ)) + (16*C2I2*cosphi*τ*BesselI(3,(math.sqrt(1.5)*R1)/τ))/(5.*R1*BesselI(1,(math.sqrt(1.5)*R1)/τ)) - (7*C2I1*(BesselI(1,(math.sqrt(1.5)*R1)/τ) + BesselI(3,(math.sqrt(1.5)*R1)/τ)))/(5.*math.sqrt(6)*BesselI(0,(math.sqrt(1.5)*R1)/τ)) + (6*C3I2*chi*cosphi*(BesselI(1,(math.sqrt(5)*R1)/(3.*τ)) + BesselI(3,(math.sqrt(5)*R1)/(3.*τ))))/(25.*math.sqrt(5)*BesselI(0,(math.sqrt(5)*R1)/(3.*τ))) - (7*C1I2*cosphi*(BesselI(2,(math.sqrt(0.8333333333333334)*R1)/τ) + BesselI(4,(math.sqrt(0.8333333333333334)*R1)/τ)))/(3.*math.sqrt(30)*BesselI(1,(math.sqrt(0.8333333333333334)*R1)/τ)) - (7*C2I2*cosphi*(BesselI(2,(math.sqrt(1.5)*R1)/τ) + BesselI(4,(math.sqrt(1.5)*R1)/τ)))/(5.*math.sqrt(6)*BesselI(1,(math.sqrt(1.5)*R1)/τ)) + (4*C1K1*chi*BesselK(0,(math.sqrt(0.8333333333333334)*R1)/τ))/(25.*BesselK(2,(math.sqrt(0.8333333333333334)*R0)/τ)) - (math.sqrt(0.13333333333333333)*C1K1*BesselK(1,(math.sqrt(0.8333333333333334)*R1)/τ))/(3.*BesselK(2,(math.sqrt(0.8333333333333334)*R0)/τ)) - (4*C2K1*chi*BesselK(0,(math.sqrt(1.5)*R1)/τ))/(5.*BesselK(2,(math.sqrt(1.5)*R0)/τ)) + (math.sqrt(6)*C2K1*BesselK(1,(math.sqrt(1.5)*R1)/τ))/(5.*BesselK(2,(math.sqrt(1.5)*R0)/τ)) + (12*C3K2*chi*cosphi*BesselK(1,(math.sqrt(5)*R1)/(3.*τ)))/(25.*math.sqrt(5)*BesselK(2,(math.sqrt(5)*R0)/(3.*τ))) - (6*C1K1*chi*BesselK(2,(math.sqrt(0.8333333333333334)*R1)/τ))/(5.*BesselK(2,(math.sqrt(0.8333333333333334)*R0)/τ)) + (32*C1K1*τ*BesselK(2,(math.sqrt(0.8333333333333334)*R1)/τ))/(15.*R1*BesselK(2,(math.sqrt(0.8333333333333334)*R0)/τ)) - (6*C2K1*chi*BesselK(2,(math.sqrt(1.5)*R1)/τ))/(5.*BesselK(2,(math.sqrt(1.5)*R0)/τ)) + (32*C2K1*τ*BesselK(2,(math.sqrt(1.5)*R1)/τ))/(15.*R1*BesselK(2,(math.sqrt(1.5)*R0)/τ)) + (24*C3K2*chi*cosphi*τ*BesselK(2,(math.sqrt(5)*R1)/(3.*τ)))/(125.*R1*BesselK(2,(math.sqrt(5)*R0)/(3.*τ))) - (22*C1K2*chi*cosphi*BesselK(1,(math.sqrt(0.8333333333333334)*R1)/τ))/(25.*BesselK(3,(math.sqrt(0.8333333333333334)*R0)/τ)) + (16*C1K2*cosphi*τ*BesselK(1,(math.sqrt(0.8333333333333334)*R1)/τ))/(15.*R1*BesselK(3,(math.sqrt(0.8333333333333334)*R0)/τ)) - (math.sqrt(0.8333333333333334)*C1K2*cosphi*(-BesselK(0,(math.sqrt(0.8333333333333334)*R1)/τ) - BesselK(2,(math.sqrt(0.8333333333333334)*R1)/τ)))/(3.*BesselK(3,(math.sqrt(0.8333333333333334)*R0)/τ)) - (14*C2K2*chi*cosphi*BesselK(1,(math.sqrt(1.5)*R1)/τ))/(5.*BesselK(3,(math.sqrt(1.5)*R0)/τ)) + (16*C2K2*cosphi*τ*BesselK(1,(math.sqrt(1.5)*R1)/τ))/(15.*R1*BesselK(3,(math.sqrt(1.5)*R0)/τ)) - (13*C2K2*cosphi*(-BesselK(0,(math.sqrt(1.5)*R1)/τ) - BesselK(2,(math.sqrt(1.5)*R1)/τ)))/(5.*math.sqrt(6)*BesselK(3,(math.sqrt(1.5)*R0)/τ)) - (7*C1K1*(-BesselK(1,(math.sqrt(0.8333333333333334)*R1)/τ) - BesselK(3,(math.sqrt(0.8333333333333334)*R1)/τ)))/(3.*math.sqrt(30)*BesselK(2,(math.sqrt(0.8333333333333334)*R0)/τ)) - (6*C1K2*chi*cosphi*BesselK(3,(math.sqrt(0.8333333333333334)*R1)/τ))/(5.*BesselK(3,(math.sqrt(0.8333333333333334)*R0)/τ)) + (16*C1K2*cosphi*τ*BesselK(3,(math.sqrt(0.8333333333333334)*R1)/τ))/(5.*R1*BesselK(3,(math.sqrt(0.8333333333333334)*R0)/τ)) - (7*C2K1*(-BesselK(1,(math.sqrt(1.5)*R1)/τ) - BesselK(3,(math.sqrt(1.5)*R1)/τ)))/(5.*math.sqrt(6)*BesselK(2,(math.sqrt(1.5)*R0)/τ)) - (6*C2K2*chi*cosphi*BesselK(3,(math.sqrt(1.5)*R1)/τ))/(5.*BesselK(3,(math.sqrt(1.5)*R0)/τ)) + (16*C2K2*cosphi*τ*BesselK(3,(math.sqrt(1.5)*R1)/τ))/(5.*R1*BesselK(3,(math.sqrt(1.5)*R0)/τ)) + (6*C3K2*chi*cosphi*(-BesselK(1,(math.sqrt(5)*R1)/(3.*τ)) - BesselK(3,(math.sqrt(5)*R1)/(3.*τ))))/(25.*math.sqrt(5)*BesselK(2,(math.sqrt(5)*R0)/(3.*τ))) - (7*C1K2*cosphi*(-BesselK(2,(math.sqrt(0.8333333333333334)*R1)/τ) - BesselK(4,(math.sqrt(0.8333333333333334)*R1)/τ)))/(3.*math.sqrt(30)*BesselK(3,(math.sqrt(0.8333333333333334)*R0)/τ)) - (7*C2K2*cosphi*(-BesselK(2,(math.sqrt(1.5)*R1)/τ) - BesselK(4,(math.sqrt(1.5)*R1)/τ)))/(5.*math.sqrt(6)*BesselK(3,(math.sqrt(1.5)*R0)/τ)) - (4*c3*chi*math.log(R1/τ))/75.
    eqn[11] = (13*C3I1*chi)/5. - (4*chi*G0)/3. + (33*c11*chi*sinphi)/4. + c12*chi*sinphi - (13*C3I2*chi*sinphi)/5. + (97*c9*chi*sinphi)/15. - (6*F1*sinphi)/5. - (297*chi*F22*sinphi)/50. - (891*chi*G2*sinphi)/50. + (1501*chi*M1*sinphi)/150. - (2954*chi*Q1*sinphi)/225. + chi*vt1 - (chi*G0*pow(R1,4))/(81.*pow(τ,4)) + (5*chi*F22*pow(R1,4)*sinphi)/(192.*pow(τ,4)) + (5*chi*G2*pow(R1,4)*sinphi)/(64.*pow(τ,4)) + (chi*G1*pow(R1,3))/(8.*pow(τ,3)) + (4*chi*F1*pow(R1,3)*sinphi)/(45.*pow(τ,3)) + (65*chi*G0*pow(R1,2))/(54.*pow(τ,2)) - (3*c9*chi*pow(R1,2)*sinphi)/(4.*pow(τ,2)) - (137*chi*F22*pow(R1,2)*sinphi)/(80.*pow(τ,2)) - (411*chi*G2*pow(R1,2)*sinphi)/(80.*pow(τ,2)) + (13*chi*M1*pow(R1,2)*sinphi)/(40.*pow(τ,2)) - (13*chi*Q1*pow(R1,2)*sinphi)/(40.*pow(τ,2)) - (c6*chi*R1)/τ + (2*G0*R1)/(3.*τ) - (97*chi*G1*R1)/(30.*τ) - (13*chi*F1*R1*sinphi)/(3.*τ) - (9*F22*R1*sinphi)/(5.*τ) - (27*G2*R1*sinphi)/(5.*τ) + (6*M1*R1*sinphi)/(5.*τ) - (6*Q1*R1*sinphi)/(5.*τ) - (12*C3I1*τ)/(5.*R1) - (c1*chi*τ)/(2.*R1) + (2*C1I2*chi*sinphi*τ)/(3.*R1) + (26*C2I2*chi*sinphi*τ)/(15.*R1) + (39*c10*chi*sinphi*pow(τ,2))/(4.*pow(R1,2)) - (c7*chi*sinphi*pow(τ,2))/(4.*pow(R1,2)) - (59*c8*chi*sinphi*pow(τ,2))/(10.*pow(R1,2)) - (4*c1*chi*pow(τ,3))/pow(R1,3) - (36*c10*sinphi*pow(τ,3))/pow(R1,3) + (72*c8*sinphi*pow(τ,3))/(5.*pow(R1,3)) - (6*c7*chi*sinphi*pow(τ,4))/pow(R1,4) - (4*C3I2*sinphi*BesselI(1,(math.sqrt(5)*R1)/(3.*τ)))/(math.sqrt(5)*BesselI(0,(math.sqrt(5)*R1)/(3.*τ))) - (4*math.sqrt(0.13333333333333333)*C1I2*chi*sinphi*(BesselI(0,(math.sqrt(0.8333333333333334)*R1)/τ) + BesselI(2,(math.sqrt(0.8333333333333334)*R1)/τ)))/(3.*BesselI(1,(math.sqrt(0.8333333333333334)*R1)/τ)) - (4*math.sqrt(0.6666666666666666)*C2I2*chi*sinphi*(BesselI(0,(math.sqrt(1.5)*R1)/τ) + BesselI(2,(math.sqrt(1.5)*R1)/τ)))/(5.*BesselI(1,(math.sqrt(1.5)*R1)/τ)) - (13*C3I2*chi*sinphi*BesselI(2,(math.sqrt(5)*R1)/(3.*τ)))/(5.*BesselI(0,(math.sqrt(5)*R1)/(3.*τ))) + (24*C3I2*sinphi*τ*BesselI(2,(math.sqrt(5)*R1)/(3.*τ)))/(5.*R1*BesselI(0,(math.sqrt(5)*R1)/(3.*τ))) + (2*C3I1*(BesselI(0,(math.sqrt(5)*R1)/(3.*τ)) + BesselI(2,(math.sqrt(5)*R1)/(3.*τ))))/(math.sqrt(5)*BesselI(1,(math.sqrt(5)*R1)/(3.*τ))) - (14*C1I2*chi*sinphi*τ*BesselI(3,(math.sqrt(0.8333333333333334)*R1)/τ))/(5.*R1*BesselI(1,(math.sqrt(0.8333333333333334)*R1)/τ)) - (14*C2I2*chi*sinphi*τ*BesselI(3,(math.sqrt(1.5)*R1)/τ))/(5.*R1*BesselI(1,(math.sqrt(1.5)*R1)/τ)) - (2*C3I2*sinphi*(BesselI(1,(math.sqrt(5)*R1)/(3.*τ)) + BesselI(3,(math.sqrt(5)*R1)/(3.*τ))))/(math.sqrt(5)*BesselI(0,(math.sqrt(5)*R1)/(3.*τ))) + (4*math.sqrt(0.13333333333333333)*C1I2*chi*sinphi*(BesselI(2,(math.sqrt(0.8333333333333334)*R1)/τ) + BesselI(4,(math.sqrt(0.8333333333333334)*R1)/τ)))/(3.*BesselI(1,(math.sqrt(0.8333333333333334)*R1)/τ)) + (4*math.sqrt(0.6666666666666666)*C2I2*chi*sinphi*(BesselI(2,(math.sqrt(1.5)*R1)/τ) + BesselI(4,(math.sqrt(1.5)*R1)/τ)))/(5.*BesselI(1,(math.sqrt(1.5)*R1)/τ)) + (13*C3K1*chi*BesselK(1,(math.sqrt(5)*R1)/(3.*τ)))/(5.*BesselK(1,(math.sqrt(5)*R0)/(3.*τ))) - (12*C3K1*τ*BesselK(1,(math.sqrt(5)*R1)/(3.*τ)))/(5.*R1*BesselK(1,(math.sqrt(5)*R0)/(3.*τ))) - (13*C3K2*chi*sinphi*BesselK(0,(math.sqrt(5)*R1)/(3.*τ)))/(5.*BesselK(2,(math.sqrt(5)*R0)/(3.*τ))) + (4*C3K2*sinphi*BesselK(1,(math.sqrt(5)*R1)/(3.*τ)))/(math.sqrt(5)*BesselK(2,(math.sqrt(5)*R0)/(3.*τ))) + (2*C3K1*(-BesselK(0,(math.sqrt(5)*R1)/(3.*τ)) - BesselK(2,(math.sqrt(5)*R1)/(3.*τ))))/(math.sqrt(5)*BesselK(1,(math.sqrt(5)*R0)/(3.*τ))) - (13*C3K2*chi*sinphi*BesselK(2,(math.sqrt(5)*R1)/(3.*τ)))/(5.*BesselK(2,(math.sqrt(5)*R0)/(3.*τ))) + (24*C3K2*sinphi*τ*BesselK(2,(math.sqrt(5)*R1)/(3.*τ)))/(5.*R1*BesselK(2,(math.sqrt(5)*R0)/(3.*τ))) + (2*C1K2*chi*sinphi*τ*BesselK(1,(math.sqrt(0.8333333333333334)*R1)/τ))/(3.*R1*BesselK(3,(math.sqrt(0.8333333333333334)*R0)/τ)) - (4*math.sqrt(0.13333333333333333)*C1K2*chi*sinphi*(-BesselK(0,(math.sqrt(0.8333333333333334)*R1)/τ) - BesselK(2,(math.sqrt(0.8333333333333334)*R1)/τ)))/(3.*BesselK(3,(math.sqrt(0.8333333333333334)*R0)/τ)) + (26*C2K2*chi*sinphi*τ*BesselK(1,(math.sqrt(1.5)*R1)/τ))/(15.*R1*BesselK(3,(math.sqrt(1.5)*R0)/τ)) - (4*math.sqrt(0.6666666666666666)*C2K2*chi*sinphi*(-BesselK(0,(math.sqrt(1.5)*R1)/τ) - BesselK(2,(math.sqrt(1.5)*R1)/τ)))/(5.*BesselK(3,(math.sqrt(1.5)*R0)/τ)) - (14*C1K2*chi*sinphi*τ*BesselK(3,(math.sqrt(0.8333333333333334)*R1)/τ))/(5.*R1*BesselK(3,(math.sqrt(0.8333333333333334)*R0)/τ)) - (14*C2K2*chi*sinphi*τ*BesselK(3,(math.sqrt(1.5)*R1)/τ))/(5.*R1*BesselK(3,(math.sqrt(1.5)*R0)/τ)) - (2*C3K2*sinphi*(-BesselK(1,(math.sqrt(5)*R1)/(3.*τ)) - BesselK(3,(math.sqrt(5)*R1)/(3.*τ))))/(math.sqrt(5)*BesselK(2,(math.sqrt(5)*R0)/(3.*τ))) + (4*math.sqrt(0.13333333333333333)*C1K2*chi*sinphi*(-BesselK(2,(math.sqrt(0.8333333333333334)*R1)/τ) - BesselK(4,(math.sqrt(0.8333333333333334)*R1)/τ)))/(3.*BesselK(3,(math.sqrt(0.8333333333333334)*R0)/τ)) + (4*math.sqrt(0.6666666666666666)*C2K2*chi*sinphi*(-BesselK(2,(math.sqrt(1.5)*R1)/τ) - BesselK(4,(math.sqrt(1.5)*R1)/τ)))/(5.*BesselK(3,(math.sqrt(1.5)*R0)/τ)) - (c8*chi*sinphi*math.log(R1/τ))/2.

    # Extracting coefficients of Sin(θ), Cos(θ) and constant terms
    for i in range(12):
        coeffeqn[3*i] = eqn[i].coeff(cosphi,0).coeff(sinphi,0) # Constant terms
        coeffeqn[3*i+1] = eqn[i].coeff(cosphi)                 # Cos(θ) coefficients
        coeffeqn[3*i+2] = eqn[i].coeff(sinphi)                 # Sin(θ) coefficients

    # Solving for the intergration constants
    sol = solve(coeffeqn,coefs)

    # Printing Integration Constants
    print("\nSolution : ")
    for key, value in sol.items():
        print(key, ' : ', value)

    set_coeff_val(sol)
    write_sol_python()
    write_sol_dolfin()
    write_sol_c_code()
    print("\nExact Solutions generated in current directory")

def read_yaml(yaml_file):
    global τ,chi,θ0,θ1,vn0,vn1,vt0,vt1,p0,p1,ev0,ev1,M0,M1,M2,Q0,Q1,Q2,F0,F1,F2,F22,G0,G1,G2,G11,R0,R1,fac,ep0,ep1
    try:
        with open(yaml_file, "r") as stream:
            inp = yaml.safe_load(stream)
    except FileNotFoundError:
        print(f"[Error] The input file {yaml_file} is not found.\n")
        raise
    kn, R = symbols('kn R')
    # Formulation Parameters
    R0 = inp["R0"]
    R1 = inp["R1"]
    fac = inp["fac"]
    τ = inp["kn"]
    chi = inp["chi_tilde"]

    # Boundary Conditions
    θ0 = eval(str(inp["bcs"]["inner"]["theta_w"]).replace("sin(phi)", "sinphi").replace("cos(phi)", "cosphi"))
    θ1 = eval(str(inp["bcs"]["outer"]["theta_w"]).replace("sin(phi)", "sinphi").replace("cos(phi)", "cosphi"))
    vn0 = eval(str(inp["bcs"]["inner"]["u_n_w"]).replace("sin(phi)", "sinphi").replace("cos(phi)", "cosphi"))
    vn1 = eval(str(inp["bcs"]["outer"]["u_n_w"]).replace("sin(phi)", "sinphi").replace("cos(phi)", "cosphi"))
    vt0 = -eval(str(inp["bcs"]["inner"]["u_t_w"]).replace("sin(phi)", "sinphi").replace("cos(phi)", "cosphi"))
    vt1 = eval(str(inp["bcs"]["outer"]["u_t_w"]).replace("sin(phi)", "sinphi").replace("cos(phi)", "cosphi"))
    p0 = eval(str(inp["bcs"]["inner"]["p_w"]).replace("sin(phi)", "sinphi").replace("cos(phi)", "cosphi"))
    p1 = eval(str(inp["bcs"]["outer"]["p_w"]).replace("sin(phi)", "sinphi").replace("cos(phi)", "cosphi"))
    ev0 = eval(str(inp["bcs"]["inner"]["epsilon_v"]).replace("sin(phi)", "sinphi").replace("cos(phi)", "cosphi"))
    ev1 = eval(str(inp["bcs"]["outer"]["epsilon_v"]).replace("sin(phi)", "sinphi").replace("cos(phi)", "cosphi"))
    ep0 = eval(str(inp["bcs"]["inner"]["epsilon_p"]).replace("sin(phi)", "sinphi").replace("cos(phi)", "cosphi"))
    ep1 = eval(str(inp["bcs"]["outer"]["epsilon_p"]).replace("sin(phi)", "sinphi").replace("cos(phi)", "cosphi"))

    # Source Terms
    mass = eval(str(inp["mass_source"]).replace("sin(phi)", "sinphi").replace("cos(phi)", "cosphi"))
    heat = eval(str(inp["heat_source"]).replace("sin(phi)", "sinphi").replace("cos(phi)", "cosphi"))
    body_R = eval(str(inp["body_force_R"]).replace("sin(phi)", "sinphi").replace("cos(phi)", "cosphi"))
    body_θ = eval(str(inp["body_force_Theta"]).replace("sin(phi)", "sinphi").replace("cos(phi)", "cosphi"))
    M0 = expand(mass).coeff(kn, -1).coeff(R, 0).coeff(sinphi, 0).coeff(cosphi, 0)
    M1 = expand(mass).coeff(kn, -2).coeff(R, 1).coeff(sinphi, 0).coeff(cosphi, 1)
    M2 = expand(mass).coeff(kn, -3).coeff(R, 2).coeff(sinphi, 0).coeff(cosphi, 0)
    Q0 = expand(heat).coeff(kn, -1).coeff(R, 0).coeff(sinphi, 0).coeff(cosphi, 0)
    Q1 = expand(heat).coeff(kn, -2).coeff(R, 1).coeff(sinphi, 0).coeff(cosphi, 1)
    Q2 = expand(heat).coeff(kn, -3).coeff(R, 2).coeff(sinphi, 0).coeff(cosphi, 0)
    F0 = expand(body_R).coeff(kn, -1).coeff(R, 0).coeff(sinphi, 0).coeff(cosphi, 0)
    F1 = expand(body_R).coeff(kn, -2).coeff(R, 1).coeff(sinphi, 0).coeff(cosphi, 1)
    F2 = expand(body_R).coeff(kn, -3).coeff(R, 2).coeff(sinphi, 0).coeff(cosphi, 0)
    F22 = expand(body_R).coeff(kn, -3).coeff(R, 2).coeff(sinphi, 0).coeff(cosphi, 1)
    G0 = expand(body_θ).coeff(kn, -1).coeff(R, 0).coeff(sinphi, 0).coeff(cosphi, 0)
    G1 = expand(body_θ).coeff(kn, -2).coeff(R, 1).coeff(sinphi, 0).coeff(cosphi, 0)
    G2 = expand(body_θ).coeff(kn, -3).coeff(R, 2).coeff(sinphi, 1).coeff(cosphi, 0)
    G11 = expand(body_θ).coeff(kn, 0).coeff(R, -1).coeff(sinphi, 1).coeff(cosphi, 0)

    # Checking Source Term Format
    if expand(mass - (1/kn)*(M0 + M1*(R/kn)*cosphi + M2*(pow(R,2)/pow(kn,2)))) != 0:
        print("mass_source Format Incorrect")
        print("Format : (1/kn)*(M0 + M1*(R/kn)*cos(phi) + M2*(pow(R,2)/pow(kn,2)))")
        exit()
    if expand(heat - (1/kn)*(Q0 + Q1*(R/kn)*cosphi + Q2*(pow(R,2)/pow(kn,2)))) != 0:
        print("heat_source Format Incorrect")
        print("Format : (1/kn)*(Q0 + Q1*(R/kn)*cos(phi) + Q2*(pow(R,2)/pow(kn,2)))")
        exit()
    if expand(body_R - (1/kn)*(F0 + (F1*((R/kn) + ((9*kn)/(5*R))) + F22*(pow(R,2)/pow(kn,2)))*cosphi + F2*(pow(R,2)/pow(kn,2)))) != 0:
        print("body_force_R Format Incorrect")
        print("Format : (1/kn)*(F0 + (F1*((R/kn) + ((9*kn)/(5*R))) + F22*(pow(R,2)/pow(kn,2)))*cos(phi) + F2*(pow(R,2)/pow(kn,2)))")
        exit()
    if expand(body_θ - (1/kn)*(G0*(1-((5*pow(R,2))/(27*pow(kn,2)))) + G1*(R/kn) + (G2*(pow(R,2)/pow(kn,2)) + G11*(kn/R))*sinphi)) != 0:
        print("body_force_Theta Format Incorrect")
        print("Format : (1/kn)*(G0*(1-((5*pow(R,2))/(27*pow(kn,2)))) + G1*(R/kn) + (G2*(pow(R,2)/pow(kn,2)) + G11*(kn/R))*sin(phi))")
        exit()

# Modified Bessel Function definitions
def BesselI(n,x):
    if (type(x) == float or type(x) == sympy.core.numbers.Float):     # when dealing with floats and ints
        return iv(n,float(x))
    if (type(x) == sympy.core.mul.Mul):                               # when dealing with symbols
        return besseli(n,x)
def BesselK(n,x):
    if (type(x) == float or type(x) == sympy.core.numbers.Float):     # when dealing with floats and ints
        return kv(n, float(x))
    if (type(x) == sympy.core.mul.Mul):                               # when dealing with symbols
        return besselk(n, x)

# Assigning solution to the Integration Constants
def set_coeff_val(sol):
    global c1,c2,c3,c4,c5,c6,c7,c8,c9,c10,c11,c12,C1I1,C1K1,C1I2,C1K2,C2I1,C2K1,C2I2,C2K2,C3I1,C3K1,C3I2,C3K2
    c1 = sol[c1]
    c2 = sol[c2]
    c3 = sol[c3]
    c4 = sol[c4]
    c5 = sol[c5]
    c6 = sol[c6]
    c7 = sol[c7]
    c8 = sol[c8]
    c9 = sol[c9]
    c10 = sol[c10]
    c11 = sol[c11]
    c12 = sol[c12]
    C1I1 = sol[C1I1]
    C1K1 = sol[C1K1]
    C1I2 = sol[C1I2]
    C1K2 = sol[C1K2]
    C2I1 = sol[C2I1]
    C2K1 = sol[C2K1]
    C2I2 = sol[C2I2]
    C2K2 = sol[C2K2]
    C3I1 = sol[C3I1]
    C3K1 = sol[C3K1]
    C3I2 = sol[C3I2]
    C3K2 = sol[C3K2]

# Exporting Solution as a Python script
def write_sol_python():
    output = open("Exact_Sol_Python.py", "w")
    data = [["theta",theta()],["p",p()],["ux",ux()],["uy",uy()],["sx",sx()],["sy",sy()],["sig_xx",sig_xx()],["sig_xy",sig_xy()],["sig_yy",sig_yy()]]
    out = ""
    out += "from scipy.special import iv\nfrom scipy.special import kv\nimport math\n\n"
    for i in range(9):
        out += "def " + data[i][0] + " (x,y):\n"
        out+= "    return " + str(data[i][1]).replace("besseli","iv").replace("besselk","kv").replace("sqrt","math.sqrt").replace("log","math.log") + "\n\n"
    output.write(out)
    output.close()

# Exporting Solution as a Dolfin compatible script
def write_sol_dolfin():
    output = open("Exact_Sol_Dolfin.cpp", "w")
    data = [["Temperature", "", [remove_comments(ccode(str(theta())))]], ["Heatflux", "2", [remove_comments(ccode(str(sx()))),remove_comments(ccode(str(sy())))]], ["Pressure", "", [remove_comments(ccode(str(p())))]],
            ["Velocity", "2", [remove_comments(ccode(str(ux()))),remove_comments(ccode(str(uy())))]], ["Stress", "2,2", [remove_comments(ccode(str(sig_xx()))), remove_comments(ccode(str(sig_xy()))), remove_comments(ccode(str(sig_yy())))]]]
    out = ""
    out += "#include <pybind11/pybind11.h>\n#include <pybind11/eigen.h>\n \n#include <cmath>\n#include <boost/math/special_functions/bessel.hpp>\n \nusing namespace std;\n \nnamespace py = pybind11;\n \n#include <dolfin/function/Expression.h>\n \n"
    out += "double BI( int n, double x ) { return boost::math::cyl_bessel_i(n,x); }\ndouble BK( int n, double x ) { return boost::math::cyl_bessel_k(n,x); }\n \n"
    for i in range(5):
        funcdec = "class " + data[i][0] + " : public dolfin::Expression {\n    public:\n    " + data[i][
            0] + "() : dolfin::Expression(" + data[i][
                      1] + ") {}\n    void eval(Eigen::Ref<Eigen::VectorXd> values,\n              Eigen::Ref<const Eigen::VectorXd> z) const override {\n\n        double x = z[0];\n        double y = z[1];\n \n"
        out += funcdec
        for j in range(len(data[i][2])):
            out += "        values[" + str(j) + "] = " + data[i][2][j].replace("besseli", "BI").replace("besselk","BK").replace("log", "std::log").replace("x**2","pow(x,2)").replace("y**2","pow(y,2)") + " ;\n"
        out += "    }\n};\n \n"

    out += "PYBIND11_MODULE(SIGNATURE, m) {\n \n"
    for i in range(5):
        out += "    py::class_<" + data[i][0] + ", std::shared_ptr<" + data[i][
            0] + ">, dolfin::Expression>\n        (m,\"" + data[i][0] + "\")\n    .def(py::init<>());\n \n"
    out += "}"
    output.write(out)
    output.close()

# Exporting Solution as a C++ script
def write_sol_c_code():
    output = open("Exact_Sol_C++.h", "w")
    data = [["theta", remove_comments(ccode(str(theta())))], ["s_x", remove_comments(ccode(str(sx())))], ["s_y", remove_comments(ccode(str(sy())))], ["p", remove_comments(ccode(str(p())))],
            ["u_x", remove_comments(ccode(str(ux())))], ["u_y", remove_comments(ccode(str(uy())))], ["sig_xx", remove_comments(ccode(str(sig_xx())))], ["sig_xy", remove_comments(ccode(str(sig_xy())))], ["sig_yy", remove_comments(ccode(str(sig_yy())))]]
    out = ""
    out += "#include <cmath>\n#include <boost/math/special_functions/bessel.hpp>\n \nusing namespace std;\n \n"
    out += "double BI( int n, double x ) { return boost::math::cyl_bessel_i(n,x); }\ndouble BK( int n, double x ) { return boost::math::cyl_bessel_k(n,x); }\n \n"
    for i in range(9):
        funcdec = "double " + data[i][0] + " (double x,double y)\n{\n    "
        out += funcdec
        out += "        return " + data[i][1].replace("besseli", "BI").replace("besselk", "BK").replace("log","std::log").replace("x**2","pow(x,2)").replace("y**2","pow(y,2)") + " ;\n"
        out += "}\n"
    output.write(out)
    output.close()


# Generic expressions for the field variables
def theta():
    return c5 + ((M2 - Q2)*pow(pow(x,2) + pow(y,2),2))/(60.*pow(τ,4)) + ((5*M0 - 84*M2 - 5*Q0 + 124*Q2)*(pow(x,2) + pow(y,2)))/(75.*pow(τ,2)) - (8*C1I1*BesselI(0,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ))/(15.*BesselI(0,(sympy.sqrt(0.8333333333333334)*R1)/τ)) - (8*C1K1*BesselK(0,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ))/(15.*BesselK(2,(sympy.sqrt(0.8333333333333334)*R0)/τ)) + (x*(((M1 - Q1)*pow(pow(x,2) + pow(y,2),1.5))/(30.*pow(τ,3)) + (c11*sympy.sqrt(pow(x,2) + pow(y,2)))/τ + (c10*τ)/sympy.sqrt(pow(x,2) + pow(y,2)) - (16*C1I2*BesselI(1,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ))/(15.*BesselI(1,(sympy.sqrt(0.8333333333333334)*R1)/τ)) - (16*C1K2*BesselK(1,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ))/(15.*BesselK(3,(sympy.sqrt(0.8333333333333334)*R0)/τ))))/sympy.sqrt(pow(x,2) + pow(y,2)) - (4*c3*sympy.log(sympy.sqrt(pow(x,2) + pow(y,2))/τ))/15.
def p():
    return c4 + (F2*pow(pow(x,2) + pow(y,2),1.5))/(3.*pow(τ,3)) + (4*(3*M2 + 2*Q2)*(pow(x,2) + pow(y,2)))/(15.*pow(τ,2)) + (F0*sympy.sqrt(pow(x,2) + pow(y,2)))/τ - (4*C1I1*BesselI(0,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ))/(3.*BesselI(0,(sympy.sqrt(0.8333333333333334)*R1)/τ)) - (4*C1K1*BesselK(0,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ))/(3.*BesselK(2,(sympy.sqrt(0.8333333333333334)*R0)/τ)) + (x*(-G11 + ((3*F22 + G2)*pow(pow(x,2) + pow(y,2),1.5))/(8.*pow(τ,3)) + (2*F1*(pow(x,2) + pow(y,2)))/(3.*pow(τ,2)) - (2*c9*sympy.sqrt(pow(x,2) + pow(y,2)))/τ + ((3*M1 + 2*Q1)*sympy.sqrt(pow(x,2) + pow(y,2)))/(5.*τ) + (c8*τ)/sympy.sqrt(pow(x,2) + pow(y,2)) - (8*C1I2*BesselI(1,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ))/(3.*BesselI(1,(sympy.sqrt(0.8333333333333334)*R1)/τ)) - (8*C1K2*BesselK(1,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ))/(3.*BesselK(3,(sympy.sqrt(0.8333333333333334)*R0)/τ))))/sympy.sqrt(pow(x,2) + pow(y,2))
def ux():
    return -((y*((16*G0)/15. + (G0*pow(pow(x,2) + pow(y,2),2))/(81.*pow(τ,4)) - (G1*pow(pow(x,2) + pow(y,2),1.5))/(8.*pow(τ,3)) - (52*G0*(pow(x,2) + pow(y,2)))/(81.*pow(τ,2)) + (c6*sympy.sqrt(pow(x,2) + pow(y,2)))/τ + (c1*τ)/(2.*sympy.sqrt(pow(x,2) + pow(y,2))) - (2*C3I1*BesselI(1,(sympy.sqrt(5)*sympy.sqrt(pow(x,2) + pow(y,2)))/(3.*τ)))/(5.*BesselI(1,(sympy.sqrt(5)*R1)/(3.*τ))) - (2*C3K1*BesselK(1,(sympy.sqrt(5)*sympy.sqrt(pow(x,2) + pow(y,2)))/(3.*τ)))/(5.*BesselK(1,(sympy.sqrt(5)*R0)/(3.*τ))) - (y*(c12 + (5*(F22 + 3*G2)*pow(pow(x,2) + pow(y,2),2))/(192.*pow(τ,4)) + (4*F1*pow(pow(x,2) + pow(y,2),1.5))/(45.*pow(τ,3)) - (3*c9*(pow(x,2) + pow(y,2)))/(4.*pow(τ,2)) + ((-25*F22 - 75*G2 + 2*M1 - 2*Q1)*(pow(x,2) + pow(y,2)))/(40.*pow(τ,2)) - (104*F1*sympy.sqrt(pow(x,2) + pow(y,2)))/(45.*τ) + (3*c10*pow(τ,2))/(2.*(pow(x,2) + pow(y,2))) - (c7*pow(τ,2))/(4.*(pow(x,2) + pow(y,2))) + (C3I2*((-2*BesselI(0,(sympy.sqrt(5)*sympy.sqrt(pow(x,2) + pow(y,2)))/(3.*τ)))/5. - (2*BesselI(2,(sympy.sqrt(5)*sympy.sqrt(pow(x,2) + pow(y,2)))/(3.*τ)))/5.))/BesselI(0,(sympy.sqrt(5)*R1)/(3.*τ)) + (C3K2*((-2*BesselK(0,(sympy.sqrt(5)*sympy.sqrt(pow(x,2) + pow(y,2)))/(3.*τ)))/5. - (2*BesselK(2,(sympy.sqrt(5)*sympy.sqrt(pow(x,2) + pow(y,2)))/(3.*τ)))/5.))/BesselK(2,(sympy.sqrt(5)*R0)/(3.*τ)) + c8*((-5*pow(τ,2))/(3.*(pow(x,2) + pow(y,2))) - sympy.log(sympy.sqrt(pow(x,2) + pow(y,2))/τ)/2.)))/sympy.sqrt(pow(x,2) + pow(y,2))))/sympy.sqrt(pow(x,2) + pow(y,2))) + (x*((M2*pow(pow(x,2) + pow(y,2),1.5))/(4.*pow(τ,3)) + (M0*sympy.sqrt(pow(x,2) + pow(y,2)))/(2.*τ) + (c2*τ)/(2.*sympy.sqrt(pow(x,2) + pow(y,2))) - (2*c3*τ)/(5.*sympy.sqrt(pow(x,2) + pow(y,2))) + (x*(c12 + ((F22 + 3*G2)*pow(pow(x,2) + pow(y,2),2))/(192.*pow(τ,4)) + (F1*pow(pow(x,2) + pow(y,2),1.5))/(45.*pow(τ,3)) - (c9*(pow(x,2) + pow(y,2)))/(4.*pow(τ,2)) + ((-25*F22 - 75*G2 + 42*M1 - 2*Q1)*(pow(x,2) + pow(y,2)))/(120.*pow(τ,2)) - (52*F1*sympy.sqrt(pow(x,2) + pow(y,2)))/(45.*τ) + (48*F1*τ)/(25.*sympy.sqrt(pow(x,2) + pow(y,2))) - (3*c10*pow(τ,2))/(2.*(pow(x,2) + pow(y,2))) + (c7*pow(τ,2))/(4.*(pow(x,2) + pow(y,2))) + (C3I2*((-2*BesselI(0,(sympy.sqrt(5)*sympy.sqrt(pow(x,2) + pow(y,2)))/(3.*τ)))/5. + (2*BesselI(2,(sympy.sqrt(5)*sympy.sqrt(pow(x,2) + pow(y,2)))/(3.*τ)))/5.))/BesselI(0,(sympy.sqrt(5)*R1)/(3.*τ)) + (C3K2*((-2*BesselK(0,(sympy.sqrt(5)*sympy.sqrt(pow(x,2) + pow(y,2)))/(3.*τ)))/5. + (2*BesselK(2,(sympy.sqrt(5)*sympy.sqrt(pow(x,2) + pow(y,2)))/(3.*τ)))/5.))/BesselK(2,(sympy.sqrt(5)*R0)/(3.*τ)) + c8*(0.5 + (5*pow(τ,2))/(3.*(pow(x,2) + pow(y,2))) - sympy.log(sympy.sqrt(pow(x,2) + pow(y,2))/τ)/2.)))/sympy.sqrt(pow(x,2) + pow(y,2))))/sympy.sqrt(pow(x,2) + pow(y,2))
def uy():
    return (x*((16*G0)/15. + (G0*pow(pow(x,2) + pow(y,2),2))/(81.*pow(τ,4)) - (G1*pow(pow(x,2) + pow(y,2),1.5))/(8.*pow(τ,3)) - (52*G0*(pow(x,2) + pow(y,2)))/(81.*pow(τ,2)) + (c6*sympy.sqrt(pow(x,2) + pow(y,2)))/τ + (c1*τ)/(2.*sympy.sqrt(pow(x,2) + pow(y,2))) - (2*C3I1*BesselI(1,(sympy.sqrt(5)*sympy.sqrt(pow(x,2) + pow(y,2)))/(3.*τ)))/(5.*BesselI(1,(sympy.sqrt(5)*R1)/(3.*τ))) - (2*C3K1*BesselK(1,(sympy.sqrt(5)*sympy.sqrt(pow(x,2) + pow(y,2)))/(3.*τ)))/(5.*BesselK(1,(sympy.sqrt(5)*R0)/(3.*τ))) - (y*(c12 + (5*(F22 + 3*G2)*pow(pow(x,2) + pow(y,2),2))/(192.*pow(τ,4)) + (4*F1*pow(pow(x,2) + pow(y,2),1.5))/(45.*pow(τ,3)) - (3*c9*(pow(x,2) + pow(y,2)))/(4.*pow(τ,2)) + ((-25*F22 - 75*G2 + 2*M1 - 2*Q1)*(pow(x,2) + pow(y,2)))/(40.*pow(τ,2)) - (104*F1*sympy.sqrt(pow(x,2) + pow(y,2)))/(45.*τ) + (3*c10*pow(τ,2))/(2.*(pow(x,2) + pow(y,2))) - (c7*pow(τ,2))/(4.*(pow(x,2) + pow(y,2))) + (C3I2*((-2*BesselI(0,(sympy.sqrt(5)*sympy.sqrt(pow(x,2) + pow(y,2)))/(3.*τ)))/5. - (2*BesselI(2,(sympy.sqrt(5)*sympy.sqrt(pow(x,2) + pow(y,2)))/(3.*τ)))/5.))/BesselI(0,(sympy.sqrt(5)*R1)/(3.*τ)) + (C3K2*((-2*BesselK(0,(sympy.sqrt(5)*sympy.sqrt(pow(x,2) + pow(y,2)))/(3.*τ)))/5. - (2*BesselK(2,(sympy.sqrt(5)*sympy.sqrt(pow(x,2) + pow(y,2)))/(3.*τ)))/5.))/BesselK(2,(sympy.sqrt(5)*R0)/(3.*τ)) + c8*((-5*pow(τ,2))/(3.*(pow(x,2) + pow(y,2))) - sympy.log(sympy.sqrt(pow(x,2) + pow(y,2))/τ)/2.)))/sympy.sqrt(pow(x,2) + pow(y,2))))/sympy.sqrt(pow(x,2) + pow(y,2)) + (y*((M2*pow(pow(x,2) + pow(y,2),1.5))/(4.*pow(τ,3)) + (M0*sympy.sqrt(pow(x,2) + pow(y,2)))/(2.*τ) + (c2*τ)/(2.*sympy.sqrt(pow(x,2) + pow(y,2))) - (2*c3*τ)/(5.*sympy.sqrt(pow(x,2) + pow(y,2))) + (x*(c12 + ((F22 + 3*G2)*pow(pow(x,2) + pow(y,2),2))/(192.*pow(τ,4)) + (F1*pow(pow(x,2) + pow(y,2),1.5))/(45.*pow(τ,3)) - (c9*(pow(x,2) + pow(y,2)))/(4.*pow(τ,2)) + ((-25*F22 - 75*G2 + 42*M1 - 2*Q1)*(pow(x,2) + pow(y,2)))/(120.*pow(τ,2)) - (52*F1*sympy.sqrt(pow(x,2) + pow(y,2)))/(45.*τ) + (48*F1*τ)/(25.*sympy.sqrt(pow(x,2) + pow(y,2))) - (3*c10*pow(τ,2))/(2.*(pow(x,2) + pow(y,2))) + (c7*pow(τ,2))/(4.*(pow(x,2) + pow(y,2))) + (C3I2*((-2*BesselI(0,(sympy.sqrt(5)*sympy.sqrt(pow(x,2) + pow(y,2)))/(3.*τ)))/5. + (2*BesselI(2,(sympy.sqrt(5)*sympy.sqrt(pow(x,2) + pow(y,2)))/(3.*τ)))/5.))/BesselI(0,(sympy.sqrt(5)*R1)/(3.*τ)) + (C3K2*((-2*BesselK(0,(sympy.sqrt(5)*sympy.sqrt(pow(x,2) + pow(y,2)))/(3.*τ)))/5. + (2*BesselK(2,(sympy.sqrt(5)*sympy.sqrt(pow(x,2) + pow(y,2)))/(3.*τ)))/5.))/BesselK(2,(sympy.sqrt(5)*R0)/(3.*τ)) + c8*(0.5 + (5*pow(τ,2))/(3.*(pow(x,2) + pow(y,2))) - sympy.log(sympy.sqrt(pow(x,2) + pow(y,2))/τ)/2.)))/sympy.sqrt(pow(x,2) + pow(y,2))))/sympy.sqrt(pow(x,2) + pow(y,2))
def sx():
    return (x*(((-M2 + Q2)*pow(pow(x,2) + pow(y,2),1.5))/(4.*pow(τ,3)) + ((-M0 + Q0)*sympy.sqrt(pow(x,2) + pow(y,2)))/(2.*τ) + (c3*τ)/sympy.sqrt(pow(x,2) + pow(y,2)) + (x*((-15*c11)/4. - 3*c9 + (3*(9*F22 + 27*G2 - 15*M1 + 20*Q1))/10. + (3*(F22 + 3*G2 - 2*M1 + 2*Q1)*(pow(x,2) + pow(y,2)))/(16.*pow(τ,2)) + (F1*sympy.sqrt(pow(x,2) + pow(y,2)))/(2.*τ) + (15*c10*pow(τ,2))/(4.*(pow(x,2) + pow(y,2))) - (3*c8*pow(τ,2))/(2.*(pow(x,2) + pow(y,2))) + (C3I2*(BesselI(0,(sympy.sqrt(5)*sympy.sqrt(pow(x,2) + pow(y,2)))/(3.*τ)) - BesselI(2,(sympy.sqrt(5)*sympy.sqrt(pow(x,2) + pow(y,2)))/(3.*τ))))/BesselI(0,(sympy.sqrt(5)*R1)/(3.*τ)) + (C3K2*(BesselK(0,(sympy.sqrt(5)*sympy.sqrt(pow(x,2) + pow(y,2)))/(3.*τ)) - BesselK(2,(sympy.sqrt(5)*sympy.sqrt(pow(x,2) + pow(y,2)))/(3.*τ))))/BesselK(2,(sympy.sqrt(5)*R0)/(3.*τ))))/sympy.sqrt(pow(x,2) + pow(y,2))))/sympy.sqrt(pow(x,2) + pow(y,2)) - (y*((5*G0*(pow(x,2) + pow(y,2)))/(18.*pow(τ,2)) - (3*G1*sympy.sqrt(pow(x,2) + pow(y,2)))/(2.*τ) + (C3I1*BesselI(1,(sympy.sqrt(5)*sympy.sqrt(pow(x,2) + pow(y,2)))/(3.*τ)))/BesselI(1,(sympy.sqrt(5)*R1)/(3.*τ)) + (C3K1*BesselK(1,(sympy.sqrt(5)*sympy.sqrt(pow(x,2) + pow(y,2)))/(3.*τ)))/BesselK(1,(sympy.sqrt(5)*R0)/(3.*τ)) - (y*((-15*c11)/4. - 3*c9 + (3*(9*F22 + 27*G2 - 15*M1 + 20*Q1))/10. + ((9*F22 + 27*G2 - 2*M1 + 2*Q1)*(pow(x,2) + pow(y,2)))/(16.*pow(τ,2)) + (F1*sympy.sqrt(pow(x,2) + pow(y,2)))/τ - (15*c10*pow(τ,2))/(4.*(pow(x,2) + pow(y,2))) + (3*c8*pow(τ,2))/(2.*(pow(x,2) + pow(y,2))) + (C3I2*(BesselI(0,(sympy.sqrt(5)*sympy.sqrt(pow(x,2) + pow(y,2)))/(3.*τ)) + BesselI(2,(sympy.sqrt(5)*sympy.sqrt(pow(x,2) + pow(y,2)))/(3.*τ))))/BesselI(0,(sympy.sqrt(5)*R1)/(3.*τ)) + (C3K2*(BesselK(0,(sympy.sqrt(5)*sympy.sqrt(pow(x,2) + pow(y,2)))/(3.*τ)) + BesselK(2,(sympy.sqrt(5)*sympy.sqrt(pow(x,2) + pow(y,2)))/(3.*τ))))/BesselK(2,(sympy.sqrt(5)*R0)/(3.*τ))))/sympy.sqrt(pow(x,2) + pow(y,2))))/sympy.sqrt(pow(x,2) + pow(y,2))
def sy():
    return (y*(((-M2 + Q2)*pow(pow(x,2) + pow(y,2),1.5))/(4.*pow(τ,3)) + ((-M0 + Q0)*sympy.sqrt(pow(x,2) + pow(y,2)))/(2.*τ) + (c3*τ)/sympy.sqrt(pow(x,2) + pow(y,2)) + (x*((-15*c11)/4. - 3*c9 + (3*(9*F22 + 27*G2 - 15*M1 + 20*Q1))/10. + (3*(F22 + 3*G2 - 2*M1 + 2*Q1)*(pow(x,2) + pow(y,2)))/(16.*pow(τ,2)) + (F1*sympy.sqrt(pow(x,2) + pow(y,2)))/(2.*τ) + (15*c10*pow(τ,2))/(4.*(pow(x,2) + pow(y,2))) - (3*c8*pow(τ,2))/(2.*(pow(x,2) + pow(y,2))) + (C3I2*(BesselI(0,(sympy.sqrt(5)*sympy.sqrt(pow(x,2) + pow(y,2)))/(3.*τ)) - BesselI(2,(sympy.sqrt(5)*sympy.sqrt(pow(x,2) + pow(y,2)))/(3.*τ))))/BesselI(0,(sympy.sqrt(5)*R1)/(3.*τ)) + (C3K2*(BesselK(0,(sympy.sqrt(5)*sympy.sqrt(pow(x,2) + pow(y,2)))/(3.*τ)) - BesselK(2,(sympy.sqrt(5)*sympy.sqrt(pow(x,2) + pow(y,2)))/(3.*τ))))/BesselK(2,(sympy.sqrt(5)*R0)/(3.*τ))))/sympy.sqrt(pow(x,2) + pow(y,2))))/sympy.sqrt(pow(x,2) + pow(y,2)) + (x*((5*G0*(pow(x,2) + pow(y,2)))/(18.*pow(τ,2)) - (3*G1*sympy.sqrt(pow(x,2) + pow(y,2)))/(2.*τ) + (C3I1*BesselI(1,(sympy.sqrt(5)*sympy.sqrt(pow(x,2) + pow(y,2)))/(3.*τ)))/BesselI(1,(sympy.sqrt(5)*R1)/(3.*τ)) + (C3K1*BesselK(1,(sympy.sqrt(5)*sympy.sqrt(pow(x,2) + pow(y,2)))/(3.*τ)))/BesselK(1,(sympy.sqrt(5)*R0)/(3.*τ)) - (y*((-15*c11)/4. - 3*c9 + (3*(9*F22 + 27*G2 - 15*M1 + 20*Q1))/10. + ((9*F22 + 27*G2 - 2*M1 + 2*Q1)*(pow(x,2) + pow(y,2)))/(16.*pow(τ,2)) + (F1*sympy.sqrt(pow(x,2) + pow(y,2)))/τ - (15*c10*pow(τ,2))/(4.*(pow(x,2) + pow(y,2))) + (3*c8*pow(τ,2))/(2.*(pow(x,2) + pow(y,2))) + (C3I2*(BesselI(0,(sympy.sqrt(5)*sympy.sqrt(pow(x,2) + pow(y,2)))/(3.*τ)) + BesselI(2,(sympy.sqrt(5)*sympy.sqrt(pow(x,2) + pow(y,2)))/(3.*τ))))/BesselI(0,(sympy.sqrt(5)*R1)/(3.*τ)) + (C3K2*(BesselK(0,(sympy.sqrt(5)*sympy.sqrt(pow(x,2) + pow(y,2)))/(3.*τ)) + BesselK(2,(sympy.sqrt(5)*sympy.sqrt(pow(x,2) + pow(y,2)))/(3.*τ))))/BesselK(2,(sympy.sqrt(5)*R0)/(3.*τ))))/sympy.sqrt(pow(x,2) + pow(y,2))))/sympy.sqrt(pow(x,2) + pow(y,2))
def sig_xx():
    return (x*(-((y*(-(G0*pow(pow(x,2) + pow(y,2),1.5))/(27.*pow(τ,3)) + (G1*(pow(x,2) + pow(y,2)))/(4.*pow(τ,2)) + (G0*sympy.sqrt(pow(x,2) + pow(y,2)))/(3.*τ) + (c1*pow(τ,2))/(pow(x,2) + pow(y,2)) + (y*((-3*F1)/5. + ((F22 + 3*G2)*pow(pow(x,2) + pow(y,2),1.5))/(12.*pow(τ,3)) + (F1*(pow(x,2) + pow(y,2)))/(5.*pow(τ,2)) - (c9*sympy.sqrt(pow(x,2) + pow(y,2)))/τ + ((3*M1 + 2*Q1)*sympy.sqrt(pow(x,2) + pow(y,2)))/(15.*τ) + (c7*pow(τ,3))/pow(pow(x,2) + pow(y,2),1.5) + (C1I2*(-BesselI(1,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ) + BesselI(3,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)))/BesselI(1,(sympy.sqrt(0.8333333333333334)*R1)/τ) + (C2I2*(-BesselI(1,(sympy.sqrt(1.5)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ) + BesselI(3,(sympy.sqrt(1.5)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)))/BesselI(1,(sympy.sqrt(1.5)*R1)/τ) + (C1K2*(-BesselK(1,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ) + BesselK(3,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)))/BesselK(3,(sympy.sqrt(0.8333333333333334)*R0)/τ) + (C2K2*(-BesselK(1,(sympy.sqrt(1.5)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ) + BesselK(3,(sympy.sqrt(1.5)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)))/BesselK(3,(sympy.sqrt(1.5)*R0)/τ)))/sympy.sqrt(pow(x,2) + pow(y,2))))/sympy.sqrt(pow(x,2) + pow(y,2))) + (x*((-15*M0 - 72*M2 - 10*Q0 - 48*Q2)/75. + ((-3*M2 - 2*Q2)*(pow(x,2) + pow(y,2)))/(6.*pow(τ,2)) + (c2*pow(τ,2))/(pow(x,2) + pow(y,2)) + (C1I1*(BesselI(0,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)/3. + BesselI(2,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)))/BesselI(0,(sympy.sqrt(0.8333333333333334)*R1)/τ) + (C2I1*(-BesselI(0,(sympy.sqrt(1.5)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ) + BesselI(2,(sympy.sqrt(1.5)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)))/BesselI(0,(sympy.sqrt(1.5)*R1)/τ) + (C1K1*(BesselK(0,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)/3. + BesselK(2,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)))/BesselK(2,(sympy.sqrt(0.8333333333333334)*R0)/τ) + (C2K1*(-BesselK(0,(sympy.sqrt(1.5)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ) + BesselK(2,(sympy.sqrt(1.5)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)))/BesselK(2,(sympy.sqrt(1.5)*R0)/τ) + (x*((6*F1)/5. + ((-F22 - 3*G2)*pow(pow(x,2) + pow(y,2),1.5))/(24.*pow(τ,3)) - (2*F1*(pow(x,2) + pow(y,2)))/(15.*pow(τ,2)) + (c9*sympy.sqrt(pow(x,2) + pow(y,2)))/τ - (2*(3*M1 + 2*Q1)*sympy.sqrt(pow(x,2) + pow(y,2)))/(15.*τ) + (c8*τ)/sympy.sqrt(pow(x,2) + pow(y,2)) + (c7*pow(τ,3))/pow(pow(x,2) + pow(y,2),1.5) + (C1I2*((5*BesselI(1,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ))/3. + BesselI(3,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)))/BesselI(1,(sympy.sqrt(0.8333333333333334)*R1)/τ) + (C2I2*(-BesselI(1,(sympy.sqrt(1.5)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ) + BesselI(3,(sympy.sqrt(1.5)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)))/BesselI(1,(sympy.sqrt(1.5)*R1)/τ) + (C1K2*((5*BesselK(1,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ))/3. + BesselK(3,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)))/BesselK(3,(sympy.sqrt(0.8333333333333334)*R0)/τ) + (C2K2*(-BesselK(1,(sympy.sqrt(1.5)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ) + BesselK(3,(sympy.sqrt(1.5)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)))/BesselK(3,(sympy.sqrt(1.5)*R0)/τ)))/sympy.sqrt(pow(x,2) + pow(y,2))))/sympy.sqrt(pow(x,2) + pow(y,2))))/sympy.sqrt(pow(x,2) + pow(y,2)) - (y*((x*(-(G0*pow(pow(x,2) + pow(y,2),1.5))/(27.*pow(τ,3)) + (G1*(pow(x,2) + pow(y,2)))/(4.*pow(τ,2)) + (G0*sympy.sqrt(pow(x,2) + pow(y,2)))/(3.*τ) + (c1*pow(τ,2))/(pow(x,2) + pow(y,2)) + (y*((-3*F1)/5. + ((F22 + 3*G2)*pow(pow(x,2) + pow(y,2),1.5))/(12.*pow(τ,3)) + (F1*(pow(x,2) + pow(y,2)))/(5.*pow(τ,2)) - (c9*sympy.sqrt(pow(x,2) + pow(y,2)))/τ + ((3*M1 + 2*Q1)*sympy.sqrt(pow(x,2) + pow(y,2)))/(15.*τ) + (c7*pow(τ,3))/pow(pow(x,2) + pow(y,2),1.5) + (C1I2*(-BesselI(1,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ) + BesselI(3,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)))/BesselI(1,(sympy.sqrt(0.8333333333333334)*R1)/τ) + (C2I2*(-BesselI(1,(sympy.sqrt(1.5)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ) + BesselI(3,(sympy.sqrt(1.5)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)))/BesselI(1,(sympy.sqrt(1.5)*R1)/τ) + (C1K2*(-BesselK(1,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ) + BesselK(3,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)))/BesselK(3,(sympy.sqrt(0.8333333333333334)*R0)/τ) + (C2K2*(-BesselK(1,(sympy.sqrt(1.5)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ) + BesselK(3,(sympy.sqrt(1.5)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)))/BesselK(3,(sympy.sqrt(1.5)*R0)/τ)))/sympy.sqrt(pow(x,2) + pow(y,2))))/sympy.sqrt(pow(x,2) + pow(y,2)) - (y*((-15*M0 - 72*M2 - 10*Q0 - 48*Q2)/75. - ((-3*M2 - 2*Q2)*(pow(x,2) + pow(y,2)))/(30.*pow(τ,2)) - (c2*pow(τ,2))/(pow(x,2) + pow(y,2)) - (C1I1*(-BesselI(0,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)/3. + BesselI(2,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)))/BesselI(0,(sympy.sqrt(0.8333333333333334)*R1)/τ) - (C2I1*(BesselI(0,(sympy.sqrt(1.5)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ) + BesselI(2,(sympy.sqrt(1.5)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)))/BesselI(0,(sympy.sqrt(1.5)*R1)/τ) - (C1K1*(-BesselK(0,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)/3. + BesselK(2,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)))/BesselK(2,(sympy.sqrt(0.8333333333333334)*R0)/τ) - (C2K1*(BesselK(0,(sympy.sqrt(1.5)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ) + BesselK(2,(sympy.sqrt(1.5)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)))/BesselK(2,(sympy.sqrt(1.5)*R0)/τ) - (x*((6*F1)/5. + ((-F22 - 3*G2)*pow(pow(x,2) + pow(y,2),1.5))/(24.*pow(τ,3)) - (2*F1*(pow(x,2) + pow(y,2)))/(15.*pow(τ,2)) + (c9*sympy.sqrt(pow(x,2) + pow(y,2)))/τ + (c8*τ)/sympy.sqrt(pow(x,2) + pow(y,2)) + (c7*pow(τ,3))/pow(pow(x,2) + pow(y,2),1.5) + (C1I2*(BesselI(1,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)/3. + BesselI(3,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)))/BesselI(1,(sympy.sqrt(0.8333333333333334)*R1)/τ) + (C2I2*(3*BesselI(1,(sympy.sqrt(1.5)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ) + BesselI(3,(sympy.sqrt(1.5)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)))/BesselI(1,(sympy.sqrt(1.5)*R1)/τ) + (C1K2*(BesselK(1,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)/3. + BesselK(3,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)))/BesselK(3,(sympy.sqrt(0.8333333333333334)*R0)/τ) + (C2K2*(3*BesselK(1,(sympy.sqrt(1.5)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ) + BesselK(3,(sympy.sqrt(1.5)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)))/BesselK(3,(sympy.sqrt(1.5)*R0)/τ)))/sympy.sqrt(pow(x,2) + pow(y,2))))/sympy.sqrt(pow(x,2) + pow(y,2))))/sympy.sqrt(pow(x,2) + pow(y,2))
def sig_xy():
    return (y*(-((y*(-(G0*pow(pow(x,2) + pow(y,2),1.5))/(27.*pow(τ,3)) + (G1*(pow(x,2) + pow(y,2)))/(4.*pow(τ,2)) + (G0*sympy.sqrt(pow(x,2) + pow(y,2)))/(3.*τ) + (c1*pow(τ,2))/(pow(x,2) + pow(y,2)) + (y*((-3*F1)/5. + ((F22 + 3*G2)*pow(pow(x,2) + pow(y,2),1.5))/(12.*pow(τ,3)) + (F1*(pow(x,2) + pow(y,2)))/(5.*pow(τ,2)) - (c9*sympy.sqrt(pow(x,2) + pow(y,2)))/τ + ((3*M1 + 2*Q1)*sympy.sqrt(pow(x,2) + pow(y,2)))/(15.*τ) + (c7*pow(τ,3))/pow(pow(x,2) + pow(y,2),1.5) + (C1I2*(-BesselI(1,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ) + BesselI(3,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)))/BesselI(1,(sympy.sqrt(0.8333333333333334)*R1)/τ) + (C2I2*(-BesselI(1,(sympy.sqrt(1.5)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ) + BesselI(3,(sympy.sqrt(1.5)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)))/BesselI(1,(sympy.sqrt(1.5)*R1)/τ) + (C1K2*(-BesselK(1,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ) + BesselK(3,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)))/BesselK(3,(sympy.sqrt(0.8333333333333334)*R0)/τ) + (C2K2*(-BesselK(1,(sympy.sqrt(1.5)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ) + BesselK(3,(sympy.sqrt(1.5)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)))/BesselK(3,(sympy.sqrt(1.5)*R0)/τ)))/sympy.sqrt(pow(x,2) + pow(y,2))))/sympy.sqrt(pow(x,2) + pow(y,2))) + (x*((-15*M0 - 72*M2 - 10*Q0 - 48*Q2)/75. + ((-3*M2 - 2*Q2)*(pow(x,2) + pow(y,2)))/(6.*pow(τ,2)) + (c2*pow(τ,2))/(pow(x,2) + pow(y,2)) + (C1I1*(BesselI(0,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)/3. + BesselI(2,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)))/BesselI(0,(sympy.sqrt(0.8333333333333334)*R1)/τ) + (C2I1*(-BesselI(0,(sympy.sqrt(1.5)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ) + BesselI(2,(sympy.sqrt(1.5)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)))/BesselI(0,(sympy.sqrt(1.5)*R1)/τ) + (C1K1*(BesselK(0,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)/3. + BesselK(2,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)))/BesselK(2,(sympy.sqrt(0.8333333333333334)*R0)/τ) + (C2K1*(-BesselK(0,(sympy.sqrt(1.5)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ) + BesselK(2,(sympy.sqrt(1.5)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)))/BesselK(2,(sympy.sqrt(1.5)*R0)/τ) + (x*((6*F1)/5. + ((-F22 - 3*G2)*pow(pow(x,2) + pow(y,2),1.5))/(24.*pow(τ,3)) - (2*F1*(pow(x,2) + pow(y,2)))/(15.*pow(τ,2)) + (c9*sympy.sqrt(pow(x,2) + pow(y,2)))/τ - (2*(3*M1 + 2*Q1)*sympy.sqrt(pow(x,2) + pow(y,2)))/(15.*τ) + (c8*τ)/sympy.sqrt(pow(x,2) + pow(y,2)) + (c7*pow(τ,3))/pow(pow(x,2) + pow(y,2),1.5) + (C1I2*((5*BesselI(1,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ))/3. + BesselI(3,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)))/BesselI(1,(sympy.sqrt(0.8333333333333334)*R1)/τ) + (C2I2*(-BesselI(1,(sympy.sqrt(1.5)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ) + BesselI(3,(sympy.sqrt(1.5)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)))/BesselI(1,(sympy.sqrt(1.5)*R1)/τ) + (C1K2*((5*BesselK(1,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ))/3. + BesselK(3,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)))/BesselK(3,(sympy.sqrt(0.8333333333333334)*R0)/τ) + (C2K2*(-BesselK(1,(sympy.sqrt(1.5)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ) + BesselK(3,(sympy.sqrt(1.5)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)))/BesselK(3,(sympy.sqrt(1.5)*R0)/τ)))/sympy.sqrt(pow(x,2) + pow(y,2))))/sympy.sqrt(pow(x,2) + pow(y,2))))/sympy.sqrt(pow(x,2) + pow(y,2)) + (x*((x*(-(G0*pow(pow(x,2) + pow(y,2),1.5))/(27.*pow(τ,3)) + (G1*(pow(x,2) + pow(y,2)))/(4.*pow(τ,2)) + (G0*sympy.sqrt(pow(x,2) + pow(y,2)))/(3.*τ) + (c1*pow(τ,2))/(pow(x,2) + pow(y,2)) + (y*((-3*F1)/5. + ((F22 + 3*G2)*pow(pow(x,2) + pow(y,2),1.5))/(12.*pow(τ,3)) + (F1*(pow(x,2) + pow(y,2)))/(5.*pow(τ,2)) - (c9*sympy.sqrt(pow(x,2) + pow(y,2)))/τ + ((3*M1 + 2*Q1)*sympy.sqrt(pow(x,2) + pow(y,2)))/(15.*τ) + (c7*pow(τ,3))/pow(pow(x,2) + pow(y,2),1.5) + (C1I2*(-BesselI(1,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ) + BesselI(3,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)))/BesselI(1,(sympy.sqrt(0.8333333333333334)*R1)/τ) + (C2I2*(-BesselI(1,(sympy.sqrt(1.5)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ) + BesselI(3,(sympy.sqrt(1.5)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)))/BesselI(1,(sympy.sqrt(1.5)*R1)/τ) + (C1K2*(-BesselK(1,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ) + BesselK(3,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)))/BesselK(3,(sympy.sqrt(0.8333333333333334)*R0)/τ) + (C2K2*(-BesselK(1,(sympy.sqrt(1.5)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ) + BesselK(3,(sympy.sqrt(1.5)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)))/BesselK(3,(sympy.sqrt(1.5)*R0)/τ)))/sympy.sqrt(pow(x,2) + pow(y,2))))/sympy.sqrt(pow(x,2) + pow(y,2)) - (y*((-15*M0 - 72*M2 - 10*Q0 - 48*Q2)/75. - ((-3*M2 - 2*Q2)*(pow(x,2) + pow(y,2)))/(30.*pow(τ,2)) - (c2*pow(τ,2))/(pow(x,2) + pow(y,2)) - (C1I1*(-BesselI(0,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)/3. + BesselI(2,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)))/BesselI(0,(sympy.sqrt(0.8333333333333334)*R1)/τ) - (C2I1*(BesselI(0,(sympy.sqrt(1.5)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ) + BesselI(2,(sympy.sqrt(1.5)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)))/BesselI(0,(sympy.sqrt(1.5)*R1)/τ) - (C1K1*(-BesselK(0,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)/3. + BesselK(2,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)))/BesselK(2,(sympy.sqrt(0.8333333333333334)*R0)/τ) - (C2K1*(BesselK(0,(sympy.sqrt(1.5)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ) + BesselK(2,(sympy.sqrt(1.5)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)))/BesselK(2,(sympy.sqrt(1.5)*R0)/τ) - (x*((6*F1)/5. + ((-F22 - 3*G2)*pow(pow(x,2) + pow(y,2),1.5))/(24.*pow(τ,3)) - (2*F1*(pow(x,2) + pow(y,2)))/(15.*pow(τ,2)) + (c9*sympy.sqrt(pow(x,2) + pow(y,2)))/τ + (c8*τ)/sympy.sqrt(pow(x,2) + pow(y,2)) + (c7*pow(τ,3))/pow(pow(x,2) + pow(y,2),1.5) + (C1I2*(BesselI(1,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)/3. + BesselI(3,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)))/BesselI(1,(sympy.sqrt(0.8333333333333334)*R1)/τ) + (C2I2*(3*BesselI(1,(sympy.sqrt(1.5)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ) + BesselI(3,(sympy.sqrt(1.5)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)))/BesselI(1,(sympy.sqrt(1.5)*R1)/τ) + (C1K2*(BesselK(1,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)/3. + BesselK(3,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)))/BesselK(3,(sympy.sqrt(0.8333333333333334)*R0)/τ) + (C2K2*(3*BesselK(1,(sympy.sqrt(1.5)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ) + BesselK(3,(sympy.sqrt(1.5)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)))/BesselK(3,(sympy.sqrt(1.5)*R0)/τ)))/sympy.sqrt(pow(x,2) + pow(y,2))))/sympy.sqrt(pow(x,2) + pow(y,2))))/sympy.sqrt(pow(x,2) + pow(y,2))
def sig_yy():
    return (y*((x*(-(G0*pow(pow(x,2) + pow(y,2),1.5))/(27.*pow(τ,3)) + (G1*(pow(x,2) + pow(y,2)))/(4.*pow(τ,2)) + (G0*sympy.sqrt(pow(x,2) + pow(y,2)))/(3.*τ) + (c1*pow(τ,2))/(pow(x,2) + pow(y,2)) + (y*((-3*F1)/5. + ((F22 + 3*G2)*pow(pow(x,2) + pow(y,2),1.5))/(12.*pow(τ,3)) + (F1*(pow(x,2) + pow(y,2)))/(5.*pow(τ,2)) - (c9*sympy.sqrt(pow(x,2) + pow(y,2)))/τ + ((3*M1 + 2*Q1)*sympy.sqrt(pow(x,2) + pow(y,2)))/(15.*τ) + (c7*pow(τ,3))/pow(pow(x,2) + pow(y,2),1.5) + (C1I2*(-BesselI(1,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ) + BesselI(3,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)))/BesselI(1,(sympy.sqrt(0.8333333333333334)*R1)/τ) + (C2I2*(-BesselI(1,(sympy.sqrt(1.5)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ) + BesselI(3,(sympy.sqrt(1.5)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)))/BesselI(1,(sympy.sqrt(1.5)*R1)/τ) + (C1K2*(-BesselK(1,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ) + BesselK(3,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)))/BesselK(3,(sympy.sqrt(0.8333333333333334)*R0)/τ) + (C2K2*(-BesselK(1,(sympy.sqrt(1.5)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ) + BesselK(3,(sympy.sqrt(1.5)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)))/BesselK(3,(sympy.sqrt(1.5)*R0)/τ)))/sympy.sqrt(pow(x,2) + pow(y,2))))/sympy.sqrt(pow(x,2) + pow(y,2)) + (y*((-15*M0 - 72*M2 - 10*Q0 - 48*Q2)/75. + ((-3*M2 - 2*Q2)*(pow(x,2) + pow(y,2)))/(6.*pow(τ,2)) + (c2*pow(τ,2))/(pow(x,2) + pow(y,2)) + (C1I1*(BesselI(0,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)/3. + BesselI(2,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)))/BesselI(0,(sympy.sqrt(0.8333333333333334)*R1)/τ) + (C2I1*(-BesselI(0,(sympy.sqrt(1.5)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ) + BesselI(2,(sympy.sqrt(1.5)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)))/BesselI(0,(sympy.sqrt(1.5)*R1)/τ) + (C1K1*(BesselK(0,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)/3. + BesselK(2,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)))/BesselK(2,(sympy.sqrt(0.8333333333333334)*R0)/τ) + (C2K1*(-BesselK(0,(sympy.sqrt(1.5)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ) + BesselK(2,(sympy.sqrt(1.5)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)))/BesselK(2,(sympy.sqrt(1.5)*R0)/τ) + (x*((6*F1)/5. + ((-F22 - 3*G2)*pow(pow(x,2) + pow(y,2),1.5))/(24.*pow(τ,3)) - (2*F1*(pow(x,2) + pow(y,2)))/(15.*pow(τ,2)) + (c9*sympy.sqrt(pow(x,2) + pow(y,2)))/τ - (2*(3*M1 + 2*Q1)*sympy.sqrt(pow(x,2) + pow(y,2)))/(15.*τ) + (c8*τ)/sympy.sqrt(pow(x,2) + pow(y,2)) + (c7*pow(τ,3))/pow(pow(x,2) + pow(y,2),1.5) + (C1I2*((5*BesselI(1,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ))/3. + BesselI(3,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)))/BesselI(1,(sympy.sqrt(0.8333333333333334)*R1)/τ) + (C2I2*(-BesselI(1,(sympy.sqrt(1.5)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ) + BesselI(3,(sympy.sqrt(1.5)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)))/BesselI(1,(sympy.sqrt(1.5)*R1)/τ) + (C1K2*((5*BesselK(1,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ))/3. + BesselK(3,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)))/BesselK(3,(sympy.sqrt(0.8333333333333334)*R0)/τ) + (C2K2*(-BesselK(1,(sympy.sqrt(1.5)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ) + BesselK(3,(sympy.sqrt(1.5)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)))/BesselK(3,(sympy.sqrt(1.5)*R0)/τ)))/sympy.sqrt(pow(x,2) + pow(y,2))))/sympy.sqrt(pow(x,2) + pow(y,2))))/sympy.sqrt(pow(x,2) + pow(y,2)) + (x*((y*(-(G0*pow(pow(x,2) + pow(y,2),1.5))/(27.*pow(τ,3)) + (G1*(pow(x,2) + pow(y,2)))/(4.*pow(τ,2)) + (G0*sympy.sqrt(pow(x,2) + pow(y,2)))/(3.*τ) + (c1*pow(τ,2))/(pow(x,2) + pow(y,2)) + (y*((-3*F1)/5. + ((F22 + 3*G2)*pow(pow(x,2) + pow(y,2),1.5))/(12.*pow(τ,3)) + (F1*(pow(x,2) + pow(y,2)))/(5.*pow(τ,2)) - (c9*sympy.sqrt(pow(x,2) + pow(y,2)))/τ + ((3*M1 + 2*Q1)*sympy.sqrt(pow(x,2) + pow(y,2)))/(15.*τ) + (c7*pow(τ,3))/pow(pow(x,2) + pow(y,2),1.5) + (C1I2*(-BesselI(1,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ) + BesselI(3,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)))/BesselI(1,(sympy.sqrt(0.8333333333333334)*R1)/τ) + (C2I2*(-BesselI(1,(sympy.sqrt(1.5)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ) + BesselI(3,(sympy.sqrt(1.5)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)))/BesselI(1,(sympy.sqrt(1.5)*R1)/τ) + (C1K2*(-BesselK(1,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ) + BesselK(3,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)))/BesselK(3,(sympy.sqrt(0.8333333333333334)*R0)/τ) + (C2K2*(-BesselK(1,(sympy.sqrt(1.5)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ) + BesselK(3,(sympy.sqrt(1.5)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)))/BesselK(3,(sympy.sqrt(1.5)*R0)/τ)))/sympy.sqrt(pow(x,2) + pow(y,2))))/sympy.sqrt(pow(x,2) + pow(y,2)) + (x*((-15*M0 - 72*M2 - 10*Q0 - 48*Q2)/75. - ((-3*M2 - 2*Q2)*(pow(x,2) + pow(y,2)))/(30.*pow(τ,2)) - (c2*pow(τ,2))/(pow(x,2) + pow(y,2)) - (C1I1*(-BesselI(0,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)/3. + BesselI(2,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)))/BesselI(0,(sympy.sqrt(0.8333333333333334)*R1)/τ) - (C2I1*(BesselI(0,(sympy.sqrt(1.5)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ) + BesselI(2,(sympy.sqrt(1.5)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)))/BesselI(0,(sympy.sqrt(1.5)*R1)/τ) - (C1K1*(-BesselK(0,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)/3. + BesselK(2,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)))/BesselK(2,(sympy.sqrt(0.8333333333333334)*R0)/τ) - (C2K1*(BesselK(0,(sympy.sqrt(1.5)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ) + BesselK(2,(sympy.sqrt(1.5)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)))/BesselK(2,(sympy.sqrt(1.5)*R0)/τ) - (x*((6*F1)/5. + ((-F22 - 3*G2)*pow(pow(x,2) + pow(y,2),1.5))/(24.*pow(τ,3)) - (2*F1*(pow(x,2) + pow(y,2)))/(15.*pow(τ,2)) + (c9*sympy.sqrt(pow(x,2) + pow(y,2)))/τ + (c8*τ)/sympy.sqrt(pow(x,2) + pow(y,2)) + (c7*pow(τ,3))/pow(pow(x,2) + pow(y,2),1.5) + (C1I2*(BesselI(1,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)/3. + BesselI(3,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)))/BesselI(1,(sympy.sqrt(0.8333333333333334)*R1)/τ) + (C2I2*(3*BesselI(1,(sympy.sqrt(1.5)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ) + BesselI(3,(sympy.sqrt(1.5)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)))/BesselI(1,(sympy.sqrt(1.5)*R1)/τ) + (C1K2*(BesselK(1,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)/3. + BesselK(3,(sympy.sqrt(0.8333333333333334)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)))/BesselK(3,(sympy.sqrt(0.8333333333333334)*R0)/τ) + (C2K2*(3*BesselK(1,(sympy.sqrt(1.5)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ) + BesselK(3,(sympy.sqrt(1.5)*sympy.sqrt(pow(x,2) + pow(y,2)))/τ)))/BesselK(3,(sympy.sqrt(1.5)*R0)/τ)))/sympy.sqrt(pow(x,2) + pow(y,2))))/sympy.sqrt(pow(x,2) + pow(y,2))))/sympy.sqrt(pow(x,2) + pow(y,2))

# Utility function
def remove_comments(str):       # To remove unnecessary comments arising from the use of ccode()
    tmp = ""
    for line in str.splitlines():
        if not line.startswith("//"):
            tmp += line
    return tmp

if __name__ == '__main__':
    main()